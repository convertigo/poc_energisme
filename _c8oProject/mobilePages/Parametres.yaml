segment: path-to-parametres
title: Title for Parametres
↓UseSharedComponent [ngx.components.UIUseShared-1671633573137]: 
  sharedcomponent: poc_energisme.Application.NgxApp.header
  ↓username [ngx.components.UIUseVariable-1671633902509]: 
    comment: Username to display
    varValue: 
      - xmlizable: 
        - ↑classname: com.twinsoft.convertigo.beans.ngx.components.MobileSmartSourceType
        - MobileSmartSourceType: source:{"filter":"Global","project":"poc_energisme","input":"","model":{"data":[{"sharedObject":"router.sharedObject"}],"path":"?.username","prefix":"","suffix":"","custom":"","useCustom":false}}
  ↓title [ngx.components.UIUseVariable-1671634389575]: 
    varValue: 
      - xmlizable: 
        - ↑classname: com.twinsoft.convertigo.beans.ngx.components.MobileSmartSourceType
        - MobileSmartSourceType: script:'Paramètres'
↓Content [ngx.components.UIDynamicElement-1671633641938]: 
  beanData: '{"ionBean":"Content","IonSlot":"plain:fixed"}'
  tagName: ion-content
  ↓Grid [ngx.components.UIDynamicElement-1671633655036]: 
    beanData: '{"ionBean":"Grid","Height":"plain"}'
    tagName: ion-grid
    ↓rowLabelAddNewUser [ngx.components.UIDynamicElement-1671633655038]: 
      beanData: '{"ionBean":"GridRow","Height":"plain"}'
      isEnabled: false
      tagName: ion-row
      ↓GridCol [ngx.components.UIDynamicElement-1671633655040]: 
        beanData: '{"ionBean":"GridCol"}'
        tagName: ion-col
        ↓Label [ngx.components.UIDynamicElement-1671633655042]: 
          beanData: '{"ionBean":"Label"}'
          tagName: ion-label
          ↓Text [ngx.components.UIText-1671633655044]: 
            textValue: 
              - xmlizable: 
                - ↑classname: com.twinsoft.convertigo.beans.ngx.components.MobileSmartSourceType
                - MobileSmartSourceType: plain:Ajouter un nouvel utilisateur
    ↓rowFormAddNewUser [ngx.components.UIDynamicElement-1671633753750]: 
      beanData: '{"ionBean":"GridRow","Height":"plain"}'
      isEnabled: false
      tagName: ion-row
      ↓GridCol [ngx.components.UIDynamicElement-1671633753752]: 
        beanData: '{"ionBean":"GridCol"}'
        tagName: ion-col
        ↓Form [ngx.components.UIForm-1671633784865]: 
          identifier: addUser
          ↓Email [ngx.components.UIDynamicElement-1671633784867]: 
            beanData: '{"ionBean":"FormItem","Lines":"plain:inset"}'
            tagName: ion-item
            ↓Label [ngx.components.UIDynamicElement-1671633784869]: 
              beanData: '{"ionBean":"Label"}'
              tagName: ion-label
              ↓Text [ngx.components.UIText-1671633784871]: 
                textValue: 
                  - xmlizable: 
                    - ↑classname: com.twinsoft.convertigo.beans.ngx.components.MobileSmartSourceType
                    - MobileSmartSourceType: plain:Email
            ↓TextInput [ngx.components.UIDynamicElement-1671633784873]: 
              beanData: |
                '{
                 "ionBean": "Input",
                 "ControlName": "plain:email",
                 "Debounce": "plain:0"
                }'
              tagName: ion-input
          ↓Password [ngx.components.UIDynamicElement-1671633784875]: 
            beanData: '{"ionBean":"FormItem","Lines":"plain:inset"}'
            tagName: ion-item
            ↓Label [ngx.components.UIDynamicElement-1671633784877]: 
              beanData: '{"ionBean":"Label"}'
              tagName: ion-label
              ↓Text [ngx.components.UIText-1671633784879]: 
                textValue: 
                  - xmlizable: 
                    - ↑classname: com.twinsoft.convertigo.beans.ngx.components.MobileSmartSourceType
                    - MobileSmartSourceType: plain:Password
            ↓TextInput [ngx.components.UIDynamicElement-1671633784881]: 
              beanData: |
                '{
                 "ionBean": "Input",
                 "ControlName": "plain:password",
                 "Debounce": "plain:0"
                }'
              tagName: ion-input
          ↓Administrateur [ngx.components.UIDynamicElement-1671634163294]: 
            beanData: '{"ionBean":"FormItem"}'
            tagName: ion-item
            ↓Label [ngx.components.UIDynamicElement-1671634163296]: 
              beanData: '{"ionBean":"Label"}'
              tagName: ion-label
              ↓Text [ngx.components.UIText-1671634163298]: 
                textValue: 
                  - xmlizable: 
                    - ↑classname: com.twinsoft.convertigo.beans.ngx.components.MobileSmartSourceType
                    - MobileSmartSourceType: plain:Administrateur
            ↓CheckBox [ngx.components.UIDynamicElement-1671634184887]: 
              beanData: '{"ionBean":"CheckBox","ControlName":"plain:isAdmin"}'
              tagName: ion-checkbox
              ↓Event [ngx.components.UIControlEvent-1671639236710]: 
                attrName: (ionChange)
                eventName: ionChange
                isEnabled: false
                ↓CustomAction [ngx.components.UICustomAction-1671639251746]: 
                  actionValue: 
                    - xmlizable: 
                      - ↑classname: com.twinsoft.convertigo.beans.common.FormatedContent
                      - com.twinsoft.convertigo.beans.common.FormatedContent: 
                        →: |
                          '		page.c8o.log.debug(''[MB] ''+ props.actionFunction +'': ''+ props.actionName);
                          		console.log(vars.data)
                          		resolve();
                          '
                  ↓data [ngx.components.UIControlVariable-1671639276816]: 
                    varValue: 
                      - xmlizable: 
                        - ↑classname: com.twinsoft.convertigo.beans.ngx.components.MobileSmartSourceType
                        - MobileSmartSourceType: script:addUser?.controls['isAdmin']?.value
          ↓SubmitButton [ngx.components.UIDynamicElement-1671633784883]: 
            beanData: '{"ionBean":"SubmitButton"}'
            tagName: ion-button
            ↓Text [ngx.components.UIText-1671633784885]: 
              textValue: 
                - xmlizable: 
                  - ↑classname: com.twinsoft.convertigo.beans.ngx.components.MobileSmartSourceType
                  - MobileSmartSourceType: plain:Créer
          ↓ResetButton [ngx.components.UIDynamicElement-1671633784887]: 
            beanData: '{"ionBean":"ResetButton"}'
            tagName: ion-button
            ↓Text [ngx.components.UIText-1671633784889]: 
              textValue: 
                - xmlizable: 
                  - ↑classname: com.twinsoft.convertigo.beans.ngx.components.MobileSmartSourceType
                  - MobileSmartSourceType: plain:Effacer
          ↓Event [ngx.components.UIControlEvent-1671633784891]: 
            attrName: (ngSubmit)
            eventName: onSubmit
            ↓CallSequence1 [ngx.components.UIDynamicAction-1671635134905]: 
              beanData: '{"ionBean":"CallSequenceAction","requestable":"plain:lib_UserManager.AddUser"}'
              ↓user [ngx.components.UIControlVariable-1671635151165]: 
                comment: new variable
                varValue: 
                  - xmlizable: 
                    - ↑classname: com.twinsoft.convertigo.beans.ngx.components.MobileSmartSourceType
                    - MobileSmartSourceType: source:{"filter":"Form","project":"poc_energisme","input":"","model":{"data":[{"priority":1671633784865,"identifier":"addUser"}],"path":"?.controls['email']?.value","prefix":"","suffix":"","custom":"","useCustom":false}}
              ↓password [ngx.components.UIControlVariable-1671635151167]: 
                comment: new variable
                varValue: 
                  - xmlizable: 
                    - ↑classname: com.twinsoft.convertigo.beans.ngx.components.MobileSmartSourceType
                    - MobileSmartSourceType: source:{"filter":"Form","project":"poc_energisme","input":"","model":{"data":[{"priority":1671633784865,"identifier":"addUser"}],"path":"?.controls['password']?.value","prefix":"","suffix":"","custom":"","useCustom":false}}
              ↓IfElse [ngx.components.UIDynamicIf-1671635207148]: 
                beanData: '{"ionBean":"IfElseAction","condition":"source:{\"filter\":\"Sequence\",\"project\":\"poc_energisme\",\"input\":\"\",\"model\":{\"data\":[{\"sequence\":\"lib_UserManager.AddUser\",\"marker\":\"\"}],\"path\":\"?.user\",\"prefix\":\"\",\"suffix\":\"\",\"custom\":\"\",\"useCustom\":false}}"}'
                ↓CallSequence [ngx.components.UIDynamicAction-1671635060682]: 
                  beanData: '{"ionBean":"CallSequenceAction","requestable":"plain:lib_FullSyncGrp.SetUserInGroup"}'
                  ↓user [ngx.components.UIControlVariable-1671635073576]: 
                    comment: new variable
                    varValue: 
                      - xmlizable: 
                        - ↑classname: com.twinsoft.convertigo.beans.ngx.components.MobileSmartSourceType
                        - MobileSmartSourceType: source:{"filter":"Form","project":"poc_energisme","input":"","model":{"data":[{"priority":1671633784865,"identifier":"addUser"}],"path":"?.controls['email']?.value","prefix":"","suffix":"","custom":"","useCustom":false}}
                  ↓group [ngx.components.UIControlVariable-1671635073578]: 
                    comment: new variable
                    varValue: 
                      - xmlizable: 
                        - ↑classname: com.twinsoft.convertigo.beans.ngx.components.MobileSmartSourceType
                        - MobileSmartSourceType: 'script:(addUser?.controls[''isAdmin'']?.value) ? ''admin'' : ''user'''
                  ↓IfElse [ngx.components.UIDynamicIf-1671639441392]: 
                    beanData: '{"ionBean":"IfElseAction","condition":"source:{\"filter\":\"Sequence\",\"project\":\"poc_energisme\",\"input\":\"\",\"model\":{\"data\":[{\"sequence\":\"lib_FullSyncGrp.SetUserInGroup\",\"marker\":\"\"}],\"path\":\"?.success\",\"prefix\":\"\",\"suffix\":\"\",\"custom\":\"\",\"useCustom\":false}}"}'
                    ↓Toast [ngx.components.UIDynamicAction-1671639536961]: 
                      beanData: |
                        '{
                         "ionBean": "ToastAction",
                         "IonColor": "plain:success",
                         "message": "plain:Utilisateur correctement créé"
                        }'
                    ↓Else_Handler [ngx.components.UIActionElseEvent-1671639546296]: 
                      ↓Toast [ngx.components.UIDynamicAction-1671639602136]: 
                        beanData: '{"ionBean":"ToastAction","message":"plain:Un problème lors de l''insertion dans le groupe"}'
                ↓Else_Handler [ngx.components.UIActionElseEvent-1671635248361]: 
                  ↓Toast [ngx.components.UIDynamicAction-1671635264113]: 
                    beanData: |
                      '{
                       "ionBean": "ToastAction",
                       "message": "plain:Une erreur s''est produite lors de la création de l''utilisateur",
                       "position": "plain:top"
                      }'
    ↓rowButtonAddGroup [ngx.components.UIDynamicElement-1672220899733]: 
      beanData: '{"ionBean":"GridRow","Height":"plain"}'
      tagName: ion-row
      ↓colProfilsUtilisateurs [ngx.components.UIDynamicElement-1672243716288]: 
        beanData: '{"ionBean":"GridCol","Size":"plain:2"}'
        tagName: ion-col
      ↓colActifsInactifs [ngx.components.UIDynamicElement-1672243721435]: 
        beanData: '{"ionBean":"GridCol","Size":"plain:6"}'
        tagName: ion-col
        ↓GenericItem [ngx.components.UIDynamicElement-1672244784679]: 
          beanData: '{"ionBean":"GenericItem","Lines":"plain:none"}'
          tagName: ion-item
          ↓ButtonSet1 [ngx.components.UIDynamicElement-1672244784695]: 
            beanData: '{"ionBean":"ButtonSet","SetPosition":"plain:end"}'
            tagName: ion-buttons
            ↓Icon [ngx.components.UIDynamicElement-1672220940089]: 
              beanData: |
                '{
                 "ionBean": "Icon",
                 "IconName": "source:{\"filter\":\"Icon\",\"project\":\"poc_energisme\",\"input\":\"\",\"model\":{\"data\":[{\"icon\":\"''add-circle''\"}],\"path\":\"\",\"prefix\":\"\",\"suffix\":\"\",\"custom\":\"\",\"useCustom\":false}}",
                 "IonSize": "plain:large"
                }'
              tagName: ion-icon
              ↓Event [ngx.components.UIControlEvent-1672220969779]: 
                ↓ModalPage [ngx.components.UIDynamicAction-1672220987105]: 
                  beanData: |
                    '{
                     "ionBean": "ModalAction",
                     "page": "plain:poc_energisme.Application.NgxApp.modalAddGroup",
                     "blockWhileDisplayed": "plain:true"
                    }'
                  ↓IfElse [ngx.components.UIDynamicIf-1672314508071]: 
                    beanData: '{"ionBean":"IfElseAction","condition":"script:parent.out.data.add == \"true\""}'
                    ↓CallSequence [ngx.components.UIDynamicAction-1672314518993]: 
                      beanData: '{"ionBean":"CallSequenceAction","requestable":"plain:lib_FullSyncGrp.GroupsOf"}'
                      ↓user [ngx.components.UIControlVariable-1672314518996]: 
                        comment: new variable
                        varValue: 
                          - xmlizable: 
                            - ↑classname: com.twinsoft.convertigo.beans.ngx.components.MobileSmartSourceType
                            - MobileSmartSourceType: source:{"filter":"Global","project":"poc_energisme","input":"","model":{"data":[{"sharedObject":"router.sharedObject"}],"path":"?.authUser","prefix":"","suffix":"","custom":"","useCustom":false}}
                    ↓Else_Handler [ngx.components.UIActionElseEvent-1672314521923]: 
                      ↓Toast [ngx.components.UIDynamicAction-1672314527951]: 
                        beanData: '{"ionBean":"ToastAction","message":"script:JSON.stringify(stack[''1672220987105''].out)"}'
              ↓Style [ngx.components.UIStyle-1672244711129]: 
                styleContent: 
                  - xmlizable: 
                    - ↑classname: com.twinsoft.convertigo.beans.common.FormatedContent
                    - com.twinsoft.convertigo.beans.common.FormatedContent: 
                      →: |
                        '	color: #07a96e;
                        '
      ↓colIconAddGroup [ngx.components.UIDynamicElement-1672220899741]: 
        beanData: '{"ionBean":"GridCol"}'
        isEnabled: false
        tagName: ion-col
    ↓rowLabelAddGroupSites [ngx.components.UIDynamicElement-1671808917554]: 
      beanData: '{"ionBean":"GridRow","Height":"plain"}'
      isEnabled: false
      tagName: ion-row
      ↓colLabelAddGroupSites [ngx.components.UIDynamicElement-1671808917556]: 
        beanData: '{"ionBean":"GridCol"}'
        tagName: ion-col
        ↓Label [ngx.components.UIDynamicElement-1671808943111]: 
          beanData: '{"ionBean":"Label"}'
          tagName: ion-label
          ↓Text [ngx.components.UIText-1671808943113]: 
            textValue: 
              - xmlizable: 
                - ↑classname: com.twinsoft.convertigo.beans.ngx.components.MobileSmartSourceType
                - MobileSmartSourceType: plain:Ajouter un groupe de sites
    ↓rowFormAddGroupSites [ngx.components.UIDynamicElement-1671808970127]: 
      beanData: '{"ionBean":"GridRow","Height":"plain"}'
      isEnabled: false
      tagName: ion-row
      ↓colForm [ngx.components.UIDynamicElement-1671808970129]: 
        beanData: '{"ionBean":"GridCol"}'
        tagName: ion-col
        ↓Form [ngx.components.UIForm-1671808998745]: 
          identifier: formAddGroupSite
          ↓FormItem [ngx.components.UIDynamicElement-1671808998747]: 
            beanData: '{"ionBean":"FormItem"}'
            tagName: ion-item
            ↓Label [ngx.components.UIDynamicElement-1671809036945]: 
              beanData: '{"ionBean":"Label"}'
              tagName: ion-label
              ↓Text [ngx.components.UIText-1671809036947]: 
                textValue: 
                  - xmlizable: 
                    - ↑classname: com.twinsoft.convertigo.beans.ngx.components.MobileSmartSourceType
                    - MobileSmartSourceType: plain:Nom du groupe
            ↓TextInput [ngx.components.UIDynamicElement-1671808998753]: 
              beanData: |
                '{
                 "ionBean": "Input",
                 "ControlName": "plain:groupName",
                 "Debounce": "plain:0"
                }'
              tagName: ion-input
          ↓SubmitButton [ngx.components.UIDynamicElement-1671808998763]: 
            beanData: '{"ionBean":"SubmitButton"}'
            tagName: ion-button
            ↓Text [ngx.components.UIText-1671808998765]: 
              textValue: 
                - xmlizable: 
                  - ↑classname: com.twinsoft.convertigo.beans.ngx.components.MobileSmartSourceType
                  - MobileSmartSourceType: plain:Créer le groupe
          ↓ResetButton [ngx.components.UIDynamicElement-1671808998767]: 
            beanData: '{"ionBean":"ResetButton"}'
            tagName: ion-button
            ↓Text [ngx.components.UIText-1671808998769]: 
              textValue: 
                - xmlizable: 
                  - ↑classname: com.twinsoft.convertigo.beans.ngx.components.MobileSmartSourceType
                  - MobileSmartSourceType: plain:Effacer
          ↓Event [ngx.components.UIControlEvent-1671808998771]: 
            attrName: (ngSubmit)
            eventName: onSubmit
            ↓CallSequence [ngx.components.UIDynamicAction-1672137577068]: 
              beanData: '{"ionBean":"CallSequenceAction","requestable":"plain:lib_FullSyncGrp.SetUserInGroup"}'
              ↓user [ngx.components.UIControlVariable-1672137588718]: 
                comment: new variable
                varValue: 
                  - xmlizable: 
                    - ↑classname: com.twinsoft.convertigo.beans.ngx.components.MobileSmartSourceType
                    - MobileSmartSourceType: source:{"filter":"Global","project":"poc_energisme","input":"","model":{"data":[{"sharedObject":"router.sharedObject"}],"path":"?.authUser","prefix":"","suffix":"","custom":"","useCustom":false}}
              ↓group [ngx.components.UIControlVariable-1672137588720]: 
                comment: new variable
                varValue: 
                  - xmlizable: 
                    - ↑classname: com.twinsoft.convertigo.beans.ngx.components.MobileSmartSourceType
                    - MobileSmartSourceType: source:{"filter":"Form","project":"poc_energisme","input":"","model":{"data":[{"priority":1671808998745,"identifier":"formAddGroupSite"}],"path":"?.controls['groupName']?.value","prefix":"","suffix":"","custom":"","useCustom":false}}
    ↓rowListGroupsAndSites [ngx.components.UIDynamicElement-1672061108457]: 
      beanData: '{"ionBean":"GridRow"}'
      tagName: ion-row
      ↓colUsers [ngx.components.UIDynamicElement-1672243772712]: 
        beanData: '{"ionBean":"GridCol","Size":"plain:2"}'
        tagName: ion-col
        ↓Label [ngx.components.UIDynamicElement-1672243772714]: 
          beanData: '{"ionBean":"Label"}'
          tagName: ion-label
          ↓Text [ngx.components.UIText-1672243772716]: 
            textValue: 
              - xmlizable: 
                - ↑classname: com.twinsoft.convertigo.beans.ngx.components.MobileSmartSourceType
                - MobileSmartSourceType: plain:Utilisateurs
      ↓colGroups [ngx.components.UIDynamicElement-1672061108459]: 
        beanData: '{"ionBean":"GridCol","Size":"plain:6"}'
        tagName: ion-col
        ↓ListContainer [ngx.components.UIDynamicElement-1672061304368]: 
          beanData: '{"ionBean":"List"}'
          isEnabled: false
          tagName: ion-list
          ↓ListHeader [ngx.components.UIDynamicElement-1672061304370]: 
            beanData: '{"ionBean":"Listheader"}'
            tagName: ion-list-header
            ↓Label [ngx.components.UIDynamicElement-1672061304372]: 
              beanData: '{"ionBean":"Label"}'
              tagName: ion-label
              ↓Heading [ngx.components.UIDynamicTag-1672061304374]: 
                beanData: '{"ionBean":"Heading"}'
                tagName: h1
                ↓Text [ngx.components.UIText-1672061304376]: 
                  textValue: 
                    - xmlizable: 
                      - ↑classname: com.twinsoft.convertigo.beans.ngx.components.MobileSmartSourceType
                      - MobileSmartSourceType: plain:Liste des groupes
        ↓Grid [ngx.components.UIDynamicElement-1672151677593]: 
          beanData: '{"ionBean":"Grid"}'
          tagName: ion-grid
          ↓ListHeader [ngx.components.UIDynamicElement-1672245760271]: 
            beanData: '{"ionBean":"Listheader"}'
            tagName: ion-list-header
            ↓Label [ngx.components.UIDynamicElement-1672245760273]: 
              beanData: '{"ionBean":"Label"}'
              tagName: ion-label
              ↓Heading [ngx.components.UIDynamicTag-1672245760275]: 
                beanData: '{"ionBean":"Heading"}'
                tagName: h1
                ↓Text1 [ngx.components.UIText-1672245700877]: 
                  textValue: 
                    - xmlizable: 
                      - ↑classname: com.twinsoft.convertigo.beans.ngx.components.MobileSmartSourceType
                      - MobileSmartSourceType: plain:Groupes
          ↓Form [ngx.components.UIForm-1672393367338]: 
            identifier: formSample
            ↓RadioGroup [ngx.components.UIDynamicElement-1672394070314]: 
              beanData: '{"ionBean":"RadioGroup","ControlName":"plain:name1672394070314"}'
              tagName: ion-radio-group
              ↓Directive1 [ngx.components.UIControlDirective-1672393397077]: 
                directiveIndexName: idx
                directiveItemName: group
                directiveSource: 
                  - xmlizable: 
                    - ↑classname: com.twinsoft.convertigo.beans.ngx.components.MobileSmartSourceType
                    - MobileSmartSourceType: source:{"filter":"Sequence","project":"poc_energisme","input":"","model":{"data":[{"sequence":"poc_energisme.getGroupsOf","marker":""}],"path":"?.groups","prefix":"","suffix":"","custom":"","useCustom":false}}
                ↓ListItem [ngx.components.UIDynamicElement-1672393397080]: 
                  beanData: '{"ionBean":"ListItem"}'
                  isEnabled: false
                  tagName: ion-item
                  ↓Label [ngx.components.UIDynamicElement-1672393397083]: 
                    beanData: '{"ionBean":"Label"}'
                    tagName: ion-label
                    ↓Text [ngx.components.UIText-1672393397086]: 
                      textValue: 
                        - xmlizable: 
                          - ↑classname: com.twinsoft.convertigo.beans.ngx.components.MobileSmartSourceType
                          - MobileSmartSourceType: script:group
                ↓GridRow [ngx.components.UIDynamicElement-1672393397089]: 
                  beanData: '{"ionBean":"GridRow","Height":"plain"}'
                  tagName: ion-row
                  ↓GridCol [ngx.components.UIDynamicElement-1672393397092]: 
                    beanData: '{"ionBean":"GridCol"}'
                    tagName: ion-col
                    ↓GenericItem [ngx.components.UIDynamicElement-1672393397095]: 
                      beanData: '{"ionBean":"GenericItem","Lines":"plain:none"}'
                      isEnabled: false
                      tagName: ion-item
                      ↓Style [ngx.components.UIStyle-1672393397242]: 
                        styleContent: 
                          - xmlizable: 
                            - ↑classname: com.twinsoft.convertigo.beans.common.FormatedContent
                            - com.twinsoft.convertigo.beans.common.FormatedContent: 
                              →: |
                                '/**
                                 * Custom properties (sometimes referred to as CSS variables or cascading variables)
                                 * are entities defined by CSS authors that contain specific values to be reused throughout a document.
                                 * They are set using custom property notation, e.g.: --main-color: black;
                                 * and are accessed using the var() function, e.g.: color: var(--main-color);
                                 * You can find below your component''s properties you can customize within the page.
                                 * If you''d like to make some customizations for whole app, please see your app Style & Theme components.
                                 * For more informations see https://ionicframework.com/docs/theming.
                                **/
                                //--background	//Background of the item
                                //--background-activated	//Background of the item when pressed. Note: setting this will interfere with the Material Design ripple
                                //--background-activated-opacity	//Opacity of the item background when pressed
                                //--background-focused	//Background of the item when focused with the tab key
                                //--background-focused-opacity	//Opacity of the item background when focused with the tab key
                                //--background-hover	//Background of the item on hover
                                //--background-hover-opacity	//Opacity of the background of the item on hover
                                //--border-color	//Color of the item border
                                //--border-radius	//Radius of the item border
                                //--border-style	//Style of the item border
                                //--border-width	//Width of the item border
                                //--color	//Color of the item
                                //--color-activated	//Color of the item when pressed
                                //--color-focused	//Color of the item when focused with the tab key
                                //--color-hover	//Color of the item on hover
                                //--detail-icon-color	//Color of the item detail icon
                                //--detail-icon-font-size	//Font size of the item detail icon
                                //--detail-icon-opacity	//Opacity of the item detail icon
                                //--highlight-color-focused	//The color of the highlight on the item when focused
                                //--highlight-color-invalid	//The color of the highlight on the item when invalid
                                //--highlight-color-valid	//The color of the highlight on the item when valid
                                //--highlight-height	//The height of the highlight on the item
                                //--inner-border-width	//Width of the item inner border
                                //--inner-box-shadow	//Box shadow of the item inner
                                //--inner-padding-bottom	//Bottom padding of the item inner
                                //--inner-padding-end	//Right padding if direction is left-to-right, and left padding if direction is right-to-left of the item inner
                                //--inner-padding-start	//Left padding if direction is left-to-right, and right padding if direction is right-to-left of the item inner
                                //--inner-padding-top	//Top padding of the item inner
                                //--min-height	//Minimum height of the item
                                //--padding-bottom	//Bottom padding of the item
                                //--padding-end	//Right padding if direction is left-to-right, and left padding if direction is right-to-left of the item
                                //--padding-start	//Left padding if direction is left-to-right, and right padding if direction is right-to-left of the item
                                //--padding-top	//Top padding of the item
                                //--ripple-color	//Color of the item ripple effect
                                //--transition	//Transition of the item
                                font-size: 14px;
                                '
                    ↓FormItem [ngx.components.UIDynamicElement-1672393403676]: 
                      beanData: '{"ionBean":"FormItem"}'
                      tagName: ion-item
                      ↓CheckBox [ngx.components.UIDynamicElement-1672393397098]: 
                        beanData: |
                          '{
                           "ionBean": "CheckBox",
                           "ControlName": "plain:name1672153653567",
                           "Value": "script:group"
                          }'
                        isEnabled: false
                        tagName: ion-checkbox
                        ↓Event [ngx.components.UIControlEvent-1672393397101]: 
                          attrName: (ionChange)
                          eventName: ionChange
                          ↓addSelectedGroup [ngx.components.UICustomAction-1672393397104]: 
                            actionValue: 
                              - xmlizable: 
                                - ↑classname: com.twinsoft.convertigo.beans.common.FormatedContent
                                - com.twinsoft.convertigo.beans.common.FormatedContent: 
                                  →: |
                                    '		page.c8o.log.debug(''[MB] ''+ props.actionFunction +'': ''+ props.actionName);
                                    		var isChecked = event.detail.checked;
                                    		var value = event.detail.value;
                                    		var bool = false;
                                    		console.log("changed")
                                    		console.log(event)
                                    		
                                    		page.c8o.log.debug("### selectedGroups")
                                    		console.log(page.local["selectedGroups"])
                                    		
                                    		if(isChecked) {
                                    			page.c8o.log.debug("### Group selected")
                                    			page.c8o.log.debug(value)
                                    			
                                    			// add checked group to local array
                                    			if(page.local["selectedGroups"] != undefined) {
                                    				page.local[''selectedGroups''].push(value)
                                    				page.c8o.log.debug("### Group added in selectedGroups")
                                    				page.c8o.log.debug("### selectedGroups")
                                    				console.log(page.local["selectedGroups"])
                                    				bool = true;
                                    			}
                                    		} else {
                                    			page.c8o.log.debug("### Group unselected")
                                    			page.c8o.log.debug(value)
                                    			// remove unchecked group from local array
                                    			if(page.local["selectedGroups"] != undefined) {
                                    				for(var i =0; i < page.local["selectedGroups"].length; i++) {
                                    					if(page.local["selectedGroups"][i] == value) {
                                    						page.local["selectedGroups"].splice(i, 1)
                                    						page.c8o.log.debug("### Groups removed from selectedGroups")
                                    						console.log(page.local["selectedGroups"])
                                    						bool = false;
                                    					}
                                    				}
                                    			}
                                    		}
                                    		resolve(bool);
                                    '
                            ↓IfElse [ngx.components.UIDynamicIf-1672393397107]: 
                              beanData: '{"ionBean":"IfElseAction"}'
                              ↓CallSequence [ngx.components.UIDynamicAction-1672393397110]: 
                                beanData: '{"ionBean":"CallSequenceAction","requestable":"plain:poc_energisme.getSitesByGroupName"}'
                                ↓group_name [ngx.components.UIControlVariable-1672393397113]: 
                                  comment: new variable
                                  varValue: 
                                    - xmlizable: 
                                      - ↑classname: com.twinsoft.convertigo.beans.ngx.components.MobileSmartSourceType
                                      - MobileSmartSourceType: script:event.detail.value
                                ↓SetLocal [ngx.components.UIDynamicAction-1672393397116]: 
                                  beanData: |
                                    '{
                                     "ionBean": "SetLocalAction",
                                     "Property": "plain:sitesFromGroup",
                                     "Value": "source:{\"filter\":\"Sequence\",\"project\":\"poc_energisme\",\"input\":\"\",\"model\":{\"data\":[{\"sequence\":\"poc_energisme.getSitesByGroupName\",\"marker\":\"\"}],\"path\":\"?.sites\",\"prefix\":\"\",\"suffix\":\"\",\"custom\":\"\",\"useCustom\":false}}"
                                    }'
                                  isEnabled: false
                                ↓pushSitesFromGroups [ngx.components.UICustomAction-1672393397119]: 
                                  actionValue: 
                                    - xmlizable: 
                                      - ↑classname: com.twinsoft.convertigo.beans.common.FormatedContent
                                      - com.twinsoft.convertigo.beans.common.FormatedContent: 
                                        →: |
                                          '		page.c8o.log.debug(''[MB] ''+ props.actionFunction +'': ''+ props.actionName);
                                          		console.log("before loop");
                                          		console.log(page.local["sitesFromGroup"]);
                                          		console.log(vars.sites);
                                          		var sites = vars.sites;
                                          		for(var i = 0; i < sites.length; i++) {
                                          			console.log("in loop")
                                          			console.log(sites[i])
                                          			page.local["sitesFromGroup"].push(sites[i])	
                                          		}
                                          		
                                          		page.c8o.log.debug("### sitesFromGroups after selected one or multiple group")
                                          		console.log(page.local["sitesFromGroup"])
                                          		resolve();
                                          '
                                  ↓sites [ngx.components.UIControlVariable-1672393397122]: 
                                    varValue: 
                                      - xmlizable: 
                                        - ↑classname: com.twinsoft.convertigo.beans.ngx.components.MobileSmartSourceType
                                        - MobileSmartSourceType: source:{"filter":"Sequence","project":"poc_energisme","input":"","model":{"data":[{"sequence":"poc_energisme.getSitesByGroupName","marker":""}],"path":"?.sites","prefix":"","suffix":"","custom":"","useCustom":false}}
                              ↓Else_Handler [ngx.components.UIActionElseEvent-1672393397125]: 
                                ↓If [ngx.components.UIDynamicAction-1672393397128]: 
                                  beanData: '{"ionBean":"IfAction","condition":"script:this.local[''sitesFromGroup''] != undefined"}'
                                  ↓SetLocal [ngx.components.UIDynamicAction-1672393397131]: 
                                    beanData: |
                                      '{
                                       "ionBean": "SetLocalAction",
                                       "Property": "plain:sitesFromGroup",
                                       "Value": "script:[]"
                                      }'
                                    isEnabled: false
                                  ↓CallSequence [ngx.components.UIDynamicAction-1672393397134]: 
                                    beanData: '{"ionBean":"CallSequenceAction","requestable":"plain:poc_energisme.getSitesByGroupName"}'
                                    ↓group_name [ngx.components.UIControlVariable-1672393397137]: 
                                      comment: new variable
                                      varValue: 
                                        - xmlizable: 
                                          - ↑classname: com.twinsoft.convertigo.beans.ngx.components.MobileSmartSourceType
                                          - MobileSmartSourceType: script:event.detail.value
                                    ↓SetLocal [ngx.components.UIDynamicAction-1672393397140]: 
                                      beanData: |
                                        '{
                                         "ionBean": "SetLocalAction",
                                         "Property": "plain:sitesFromGroup",
                                         "Value": "source:{\"filter\":\"Sequence\",\"project\":\"poc_energisme\",\"input\":\"\",\"model\":{\"data\":[{\"sequence\":\"poc_energisme.getSitesByGroupName\",\"marker\":\"\"}],\"path\":\"?.sites\",\"prefix\":\"\",\"suffix\":\"\",\"custom\":\"\",\"useCustom\":false}}"
                                        }'
                                      isEnabled: false
                                    ↓removeSitesFromGroups [ngx.components.UICustomAction-1672393397143]: 
                                      actionValue: 
                                        - xmlizable: 
                                          - ↑classname: com.twinsoft.convertigo.beans.common.FormatedContent
                                          - com.twinsoft.convertigo.beans.common.FormatedContent: 
                                            →: |
                                              '		page.c8o.log.debug(''[MB] ''+ props.actionFunction +'': ''+ props.actionName);
                                              		var sites = vars.sites;
                                              		console.log(sites)
                                              		console.log(page.local["sitesFromGroup"])
                                              		
                                              		for(var i = 0; i < sites.length; i++) {
                                              			if(page.local["sitesFromGroup"].includes(sites[i])) {
                                              				page.local["sitesFromGroup"].splice(page.local["sitesFromGroup"].indexOf(sites[i]), 1)
                                              			}
                                              		}
                                              		resolve();
                                              '
                                      ↓sites [ngx.components.UIControlVariable-1672393397146]: 
                                        varValue: 
                                          - xmlizable: 
                                            - ↑classname: com.twinsoft.convertigo.beans.ngx.components.MobileSmartSourceType
                                            - MobileSmartSourceType: source:{"filter":"Sequence","project":"poc_energisme","input":"","model":{"data":[{"sequence":"poc_energisme.getSitesByGroupName","marker":""}],"path":"?.sites","prefix":"","suffix":"","custom":"","useCustom":false}}
                      ↓RadioButton [ngx.components.UIDynamicElement-1672393431180]: 
                        beanData: '{"ionBean":"RadioButton","Value":"script:group.name"}'
                        tagName: ion-radio
                        ↓Event [ngx.components.UIControlEvent-1672393449358]: 
                          attrName: (ionChange)
                          eventName: ionChange
                          isEnabled: false
                          ↓addSelectedGroup [ngx.components.UICustomAction-1672393449361]: 
                            actionValue: 
                              - xmlizable: 
                                - ↑classname: com.twinsoft.convertigo.beans.common.FormatedContent
                                - com.twinsoft.convertigo.beans.common.FormatedContent: 
                                  →: |
                                    '		page.c8o.log.debug(''[MB] ''+ props.actionFunction +'': ''+ props.actionName);
                                    		var isChecked = event.detail.checked;
                                    		var value = event.detail.value;
                                    		var bool = false;
                                    		console.log("changed")
                                    		console.log(event)
                                    		
                                    		page.c8o.log.debug("### selectedGroups")
                                    		console.log(page.local["selectedGroups"])
                                    		
                                    		if(isChecked) {
                                    			page.c8o.log.debug("### Group selected")
                                    			page.c8o.log.debug(value)
                                    			
                                    			// add checked group to local array
                                    			if(page.local["selectedGroups"] != undefined) {
                                    				page.local[''selectedGroups''].push(value)
                                    				page.c8o.log.debug("### Group added in selectedGroups")
                                    				page.c8o.log.debug("### selectedGroups")
                                    				console.log(page.local["selectedGroups"])
                                    				bool = true;
                                    			}
                                    		} else {
                                    			page.c8o.log.debug("### Group unselected")
                                    			page.c8o.log.debug(value)
                                    			// remove unchecked group from local array
                                    			if(page.local["selectedGroups"] != undefined) {
                                    				for(var i =0; i < page.local["selectedGroups"].length; i++) {
                                    					if(page.local["selectedGroups"][i] == value) {
                                    						page.local["selectedGroups"].splice(i, 1)
                                    						page.c8o.log.debug("### Groups removed from selectedGroups")
                                    						console.log(page.local["selectedGroups"])
                                    						bool = false;
                                    					}
                                    				}
                                    			}
                                    		}
                                    		resolve(bool);
                                    '
                            ↓IfElse [ngx.components.UIDynamicIf-1672393449364]: 
                              beanData: '{"ionBean":"IfElseAction"}'
                              ↓CallSequence [ngx.components.UIDynamicAction-1672393449367]: 
                                beanData: '{"ionBean":"CallSequenceAction","requestable":"plain:poc_energisme.getSitesByGroupName"}'
                                ↓group_name [ngx.components.UIControlVariable-1672393449370]: 
                                  comment: new variable
                                  varValue: 
                                    - xmlizable: 
                                      - ↑classname: com.twinsoft.convertigo.beans.ngx.components.MobileSmartSourceType
                                      - MobileSmartSourceType: script:event.detail.value
                                ↓SetLocal [ngx.components.UIDynamicAction-1672393449373]: 
                                  beanData: |
                                    '{
                                     "ionBean": "SetLocalAction",
                                     "Property": "plain:sitesFromGroup",
                                     "Value": "source:{\"filter\":\"Sequence\",\"project\":\"poc_energisme\",\"input\":\"\",\"model\":{\"data\":[{\"sequence\":\"poc_energisme.getSitesByGroupName\",\"marker\":\"\"}],\"path\":\"?.sites\",\"prefix\":\"\",\"suffix\":\"\",\"custom\":\"\",\"useCustom\":false}}"
                                    }'
                                  isEnabled: false
                                ↓pushSitesFromGroups [ngx.components.UICustomAction-1672393449376]: 
                                  actionValue: 
                                    - xmlizable: 
                                      - ↑classname: com.twinsoft.convertigo.beans.common.FormatedContent
                                      - com.twinsoft.convertigo.beans.common.FormatedContent: 
                                        →: |
                                          '		page.c8o.log.debug(''[MB] ''+ props.actionFunction +'': ''+ props.actionName);
                                          		console.log("before loop");
                                          		console.log(page.local["sitesFromGroup"]);
                                          		console.log(vars.sites);
                                          		var sites = vars.sites;
                                          		for(var i = 0; i < sites.length; i++) {
                                          			console.log("in loop")
                                          			console.log(sites[i])
                                          			page.local["sitesFromGroup"].push(sites[i])	
                                          		}
                                          		
                                          		page.c8o.log.debug("### sitesFromGroups after selected one or multiple group")
                                          		console.log(page.local["sitesFromGroup"])
                                          		resolve();
                                          '
                                  ↓sites [ngx.components.UIControlVariable-1672393449379]: 
                                    varValue: 
                                      - xmlizable: 
                                        - ↑classname: com.twinsoft.convertigo.beans.ngx.components.MobileSmartSourceType
                                        - MobileSmartSourceType: source:{"filter":"Sequence","project":"poc_energisme","input":"","model":{"data":[{"sequence":"poc_energisme.getSitesByGroupName","marker":""}],"path":"?.sites","prefix":"","suffix":"","custom":"","useCustom":false}}
                              ↓Else_Handler [ngx.components.UIActionElseEvent-1672393449382]: 
                                ↓If [ngx.components.UIDynamicAction-1672393449385]: 
                                  beanData: '{"ionBean":"IfAction","condition":"script:this.local[''sitesFromGroup''] != undefined"}'
                                  ↓SetLocal [ngx.components.UIDynamicAction-1672393449388]: 
                                    beanData: |
                                      '{
                                       "ionBean": "SetLocalAction",
                                       "Property": "plain:sitesFromGroup",
                                       "Value": "script:[]"
                                      }'
                                    isEnabled: false
                                  ↓CallSequence [ngx.components.UIDynamicAction-1672393449391]: 
                                    beanData: '{"ionBean":"CallSequenceAction","requestable":"plain:poc_energisme.getSitesByGroupName"}'
                                    ↓group_name [ngx.components.UIControlVariable-1672393449394]: 
                                      comment: new variable
                                      varValue: 
                                        - xmlizable: 
                                          - ↑classname: com.twinsoft.convertigo.beans.ngx.components.MobileSmartSourceType
                                          - MobileSmartSourceType: script:event.detail.value
                                    ↓SetLocal [ngx.components.UIDynamicAction-1672393449397]: 
                                      beanData: |
                                        '{
                                         "ionBean": "SetLocalAction",
                                         "Property": "plain:sitesFromGroup",
                                         "Value": "source:{\"filter\":\"Sequence\",\"project\":\"poc_energisme\",\"input\":\"\",\"model\":{\"data\":[{\"sequence\":\"poc_energisme.getSitesByGroupName\",\"marker\":\"\"}],\"path\":\"?.sites\",\"prefix\":\"\",\"suffix\":\"\",\"custom\":\"\",\"useCustom\":false}}"
                                        }'
                                      isEnabled: false
                                    ↓removeSitesFromGroups [ngx.components.UICustomAction-1672393449400]: 
                                      actionValue: 
                                        - xmlizable: 
                                          - ↑classname: com.twinsoft.convertigo.beans.common.FormatedContent
                                          - com.twinsoft.convertigo.beans.common.FormatedContent: 
                                            →: |
                                              '		page.c8o.log.debug(''[MB] ''+ props.actionFunction +'': ''+ props.actionName);
                                              		var sites = vars.sites;
                                              		console.log(sites)
                                              		console.log(page.local["sitesFromGroup"])
                                              		
                                              		for(var i = 0; i < sites.length; i++) {
                                              			if(page.local["sitesFromGroup"].includes(sites[i])) {
                                              				page.local["sitesFromGroup"].splice(page.local["sitesFromGroup"].indexOf(sites[i]), 1)
                                              			}
                                              		}
                                              		resolve();
                                              '
                                      ↓sites [ngx.components.UIControlVariable-1672393449403]: 
                                        varValue: 
                                          - xmlizable: 
                                            - ↑classname: com.twinsoft.convertigo.beans.ngx.components.MobileSmartSourceType
                                            - MobileSmartSourceType: source:{"filter":"Sequence","project":"poc_energisme","input":"","model":{"data":[{"sequence":"poc_energisme.getSitesByGroupName","marker":""}],"path":"?.sites","prefix":"","suffix":"","custom":"","useCustom":false}}
                      ↓Directive1 [ngx.components.UIControlDirective-1672393397149]: 
                        directiveName: If
                        directiveSource: 
                          - xmlizable: 
                            - ↑classname: com.twinsoft.convertigo.beans.ngx.components.MobileSmartSourceType
                            - MobileSmartSourceType: script:group.name.includes('ad:')
                        ↓Icon [ngx.components.UIDynamicElement-1672393397152]: 
                          beanData: |
                            '{
                             "ionBean": "Icon",
                             "IconName": "source:{\"filter\":\"Asset\",\"project\":\"poc_energisme\",\"input\":\"\",\"model\":{\"data\":[{\"asset\":\"''assets\\\/icon\\\/Microsoft_Azure.svg''\"}],\"path\":\"\",\"prefix\":\"\",\"suffix\":\"\",\"custom\":\"\",\"useCustom\":false}}",
                             "IconSource": "source:{\"filter\":\"Asset\",\"project\":\"poc_energisme\",\"input\":\"\",\"model\":{\"data\":[{\"asset\":\"''assets\\\/icon\\\/Microsoft_Azure.svg''\"}],\"path\":\"\",\"prefix\":\"\",\"suffix\":\"\",\"custom\":\"\",\"useCustom\":false}}"
                            }'
                          tagName: ion-icon
                          ↓Style [ngx.components.UIStyle-1672393397155]: 
                            styleContent: 
                              - xmlizable: 
                                - ↑classname: com.twinsoft.convertigo.beans.common.FormatedContent
                                - com.twinsoft.convertigo.beans.common.FormatedContent: 
                                  →: |
                                    '	margin-left: 1.0416666666666667vw !important;
                                    	margin-right: 1.0416666666666667vw !important;
                                    '
                      ↓Directive2 [ngx.components.UIControlDirective-1672393397158]: 
                        directiveName: If
                        directiveSource: 
                          - xmlizable: 
                            - ↑classname: com.twinsoft.convertigo.beans.ngx.components.MobileSmartSourceType
                            - MobileSmartSourceType: script:!group.name.includes('ad:')
                        ↓Icon [ngx.components.UIDynamicElement-1672393397161]: 
                          beanData: '{"ionBean":"Icon","IconSource":"source:{\"filter\":\"Asset\",\"project\":\"poc_energisme\",\"input\":\"\",\"model\":{\"data\":[{\"asset\":\"''assets\\\/icon\\\/c8o.png''\"}],\"path\":\"\",\"prefix\":\"\",\"suffix\":\"\",\"custom\":\"\",\"useCustom\":false}}"}'
                          isEnabled: false
                          tagName: ion-icon
                      ↓Text [ngx.components.UIText-1672393397164]: 
                        textValue: 
                          - xmlizable: 
                            - ↑classname: com.twinsoft.convertigo.beans.ngx.components.MobileSmartSourceType
                            - MobileSmartSourceType: 'script:(group.name.includes(''ad:'')) ? group.name.slice(3, group.length) + '' (''+ group.count + '')'' : group.name + '' (''+ group.count + '')'''
                      ↓Directive [ngx.components.UIControlDirective-1672393397167]: 
                        directiveName: If
                        directiveSource: 
                          - xmlizable: 
                            - ↑classname: com.twinsoft.convertigo.beans.ngx.components.MobileSmartSourceType
                            - MobileSmartSourceType: script:group.name.includes("ad:") == false
                        ↓ButtonSet1 [ngx.components.UIDynamicElement-1672393397170]: 
                          beanData: '{"ionBean":"ButtonSet","SetPosition":"plain:end"}'
                          tagName: ion-buttons
                          ↓buttonUpdate [ngx.components.UIDynamicElement-1672393397173]: 
                            beanData: '{"ionBean":"Button"}'
                            tagName: ion-button
                            ↓Event [ngx.components.UIControlEvent-1672393397176]: 
                              ↓ModalPage [ngx.components.UIDynamicAction-1672393397179]: 
                                beanData: |
                                  '{
                                   "ionBean": "ModalAction",
                                   "page": "plain:poc_energisme.Application.NgxApp.modalUpdateGroup",
                                   "data": "script:{ name: group.name }",
                                   "blockWhileDisplayed": "plain:true"
                                  }'
                                ↓If [ngx.components.UIDynamicAction-1672393397182]: 
                                  beanData: '{"ionBean":"IfAction","condition":"script:parent.out.data.update == \"true\""}'
                                  ↓CallSequence [ngx.components.UIDynamicAction-1672393397185]: 
                                    beanData: '{"ionBean":"CallSequenceAction","requestable":"plain:lib_FullSyncGrp.GroupsOf"}'
                                    ↓user [ngx.components.UIControlVariable-1672393397188]: 
                                      comment: new variable
                                      varValue: 
                                        - xmlizable: 
                                          - ↑classname: com.twinsoft.convertigo.beans.ngx.components.MobileSmartSourceType
                                          - MobileSmartSourceType: source:{"filter":"Global","project":"poc_energisme","input":"","model":{"data":[{"sharedObject":"router.sharedObject"}],"path":"?.authUser","prefix":"","suffix":"","custom":"","useCustom":false}}
                                    ↓SetLocal1 [ngx.components.UIDynamicAction-1672398744220]: 
                                      beanData: |
                                        '{
                                         "ionBean": "SetLocalAction",
                                         "Property": "plain:sitesFromGroup",
                                         "Value": "script:[]"
                                        }'
                              ↓Toast [ngx.components.UIDynamicAction-1672393397191]: 
                                beanData: '{"ionBean":"ToastAction","message":"script:group"}'
                                isEnabled: false
                            ↓Icon [ngx.components.UIDynamicElement-1672393397194]: 
                              beanData: '{"ionBean":"Icon","IconName":"source:{\"filter\":\"Icon\",\"project\":\"poc_energisme\",\"input\":\"\",\"model\":{\"data\":[{\"icon\":\"''pencil''\"}],\"path\":\"\",\"prefix\":\"\",\"suffix\":\"\",\"custom\":\"\",\"useCustom\":false}}"}'
                              tagName: ion-icon
                          ↓buttonDelete [ngx.components.UIDynamicElement-1672393397197]: 
                            beanData: '{"ionBean":"Button"}'
                            tagName: ion-button
                            ↓Event [ngx.components.UIControlEvent-1672393397200]: 
                              ↓CallSequence [ngx.components.UIDynamicAction-1672393397203]: 
                                beanData: '{"ionBean":"CallSequenceAction","requestable":"plain:lib_FullSyncGrp.RemoveGroup"}'
                                ↓group [ngx.components.UIControlVariable-1672393397206]: 
                                  comment: new variable
                                  varValue: 
                                    - xmlizable: 
                                      - ↑classname: com.twinsoft.convertigo.beans.ngx.components.MobileSmartSourceType
                                      - MobileSmartSourceType: script:group.name
                                ↓IfElse [ngx.components.UIDynamicIf-1672393397209]: 
                                  beanData: '{"ionBean":"IfElseAction","condition":"script:parent.out.success == \"true\""}'
                                  ↓CallSequence1 [ngx.components.UIDynamicAction-1672393397212]: 
                                    beanData: '{"ionBean":"CallSequenceAction","requestable":"plain:poc_energisme.removeAllSitesOfGroup"}'
                                    ↓CallSequence [ngx.components.UIDynamicAction-1672393397215]: 
                                      beanData: '{"ionBean":"CallSequenceAction","requestable":"plain:lib_FullSyncGrp.GroupsOf"}'
                                      ↓user [ngx.components.UIControlVariable-1672393397218]: 
                                        comment: new variable
                                        varValue: 
                                          - xmlizable: 
                                            - ↑classname: com.twinsoft.convertigo.beans.ngx.components.MobileSmartSourceType
                                            - MobileSmartSourceType: source:{"filter":"Global","project":"poc_energisme","input":"","model":{"data":[{"sharedObject":"router.sharedObject"}],"path":"?.authUser","prefix":"","suffix":"","custom":"","useCustom":false}}
                                      ↓removeSitesFromGroups [ngx.components.UICustomAction-1672393397221]: 
                                        actionValue: 
                                          - xmlizable: 
                                            - ↑classname: com.twinsoft.convertigo.beans.common.FormatedContent
                                            - com.twinsoft.convertigo.beans.common.FormatedContent: 
                                              →: |
                                                '		page.c8o.log.debug(''[MB] ''+ props.actionFunction +'': ''+ props.actionName);
                                                		var sites = vars.sites;
                                                		console.log(sites)
                                                		console.log(page.local["sitesFromGroup"])
                                                		
                                                		for(var i = 0; i < sites.length; i++) {
                                                			if(page.local["sitesFromGroup"].includes(sites[i])) {
                                                				page.local["sitesFromGroup"].splice(page.local["sitesFromGroup"].indexOf(sites[i]), 1)
                                                			}
                                                		}
                                                		resolve();
                                                '
                                        isEnabled: false
                                        ↓sites [ngx.components.UIControlVariable-1672393397224]: 
                                          varValue: 
                                            - xmlizable: 
                                              - ↑classname: com.twinsoft.convertigo.beans.ngx.components.MobileSmartSourceType
                                              - MobileSmartSourceType: source:{"filter":"Sequence","project":"poc_energisme","input":"","model":{"data":[{"sequence":"poc_energisme.getSitesByGroupName","marker":""}],"path":"?.sites","prefix":"","suffix":"","custom":"","useCustom":false}}
                                      ↓SetLocal1 [ngx.components.UIDynamicAction-1672398823094]: 
                                        beanData: |
                                          '{
                                           "ionBean": "SetLocalAction",
                                           "Property": "plain:sitesFromGroup",
                                           "Value": "script:[]"
                                          }'
                                    ↓group [ngx.components.UIControlVariable-1672393397227]: 
                                      comment: new variable
                                      varValue: 
                                        - xmlizable: 
                                          - ↑classname: com.twinsoft.convertigo.beans.ngx.components.MobileSmartSourceType
                                          - MobileSmartSourceType: script:group.name
                                  ↓Toast [ngx.components.UIDynamicAction-1672393397230]: 
                                    beanData: '{"ionBean":"ToastAction","message":"plain:Le groupe a été supprimé."}'
                                  ↓Else_Handler [ngx.components.UIActionElseEvent-1672393397233]: 
                                    ↓Toast [ngx.components.UIDynamicAction-1672393397236]: 
                                      beanData: '{"ionBean":"ToastAction","message":"plain:Un problème est survenue au moment de la suppression du groupe"}'
                            ↓Icon [ngx.components.UIDynamicElement-1672393397239]: 
                              beanData: '{"ionBean":"Icon","IconName":"plain:trash"}'
                              tagName: ion-icon
                  ↓Style [ngx.components.UIStyle-1672393397245]: 
                    styleContent: 
                      - xmlizable: 
                        - ↑classname: com.twinsoft.convertigo.beans.common.FormatedContent
                        - com.twinsoft.convertigo.beans.common.FormatedContent: 
                          →: |
                            	height:50px !important;
                            
              ↓Event [ngx.components.UIControlEvent-1672394173666]: 
                attrName: (ionChange)
                eventName: ionChange
                ↓addSelectedGroup [ngx.components.UICustomAction-1672394173669]: 
                  actionValue: 
                    - xmlizable: 
                      - ↑classname: com.twinsoft.convertigo.beans.common.FormatedContent
                      - com.twinsoft.convertigo.beans.common.FormatedContent: 
                        →: |
                          '		page.c8o.log.debug(''[MB] ''+ props.actionFunction +'': ''+ props.actionName);
                          		var isChecked = event.detail.checked;
                          		var value = event.detail.value;
                          		var bool = false;
                          		console.log("changed")
                          		console.log(event)
                          		
                          		page.c8o.log.debug("### selectedGroups")
                          		console.log(page.local["selectedGroups"])
                          		
                          		if(page.local["selectedGroups"] != undefined && page.local["selectedGroups"].length > 0) {
                          			page.local["selectedGroups"] = []
                          			page.local["sitesFromGroup"] = [];
                          			page.local["selectedGroups"].push(value)
                          			
                          			bool = true;
                          		} else {
                          			page.local["sitesFromGroup"] = [];
                          			page.local["selectedGroups"].push(value)
                          			bool = true;
                          		}
                          		
                          		/*
                          		if(isChecked) {
                          			page.c8o.log.debug("### Group selected")
                          			page.c8o.log.debug(value)
                          			
                          			// add checked group to local array
                          			if(page.local["selectedGroups"] != undefined) {
                          				page.local[''selectedGroups''].push(value)
                          				page.c8o.log.debug("### Group added in selectedGroups")
                          				page.c8o.log.debug("### selectedGroups")
                          				console.log(page.local["selectedGroups"])
                          				bool = true;
                          			}
                          		} else {
                          			page.c8o.log.debug("### Group unselected")
                          			page.c8o.log.debug(value)
                          			// remove unchecked group from local array
                          			if(page.local["selectedGroups"] != undefined) {
                          				for(var i =0; i < page.local["selectedGroups"].length; i++) {
                          					if(page.local["selectedGroups"][i] == value) {
                          						page.local["selectedGroups"].splice(i, 1)
                          						page.c8o.log.debug("### Groups removed from selectedGroups")
                          						console.log(page.local["selectedGroups"])
                          						bool = false;
                          					}
                          				}
                          			}
                          		} */
                          		resolve(bool);
                          '
                  ↓IfElse [ngx.components.UIDynamicIf-1672394173672]: 
                    beanData: '{"ionBean":"IfElseAction"}'
                    ↓CallSequence [ngx.components.UIDynamicAction-1672394173675]: 
                      beanData: '{"ionBean":"CallSequenceAction","requestable":"plain:poc_energisme.getSitesByGroupName"}'
                      ↓group_name [ngx.components.UIControlVariable-1672394173678]: 
                        comment: new variable
                        varValue: 
                          - xmlizable: 
                            - ↑classname: com.twinsoft.convertigo.beans.ngx.components.MobileSmartSourceType
                            - MobileSmartSourceType: script:event.detail.value
                      ↓SetLocal [ngx.components.UIDynamicAction-1672394173681]: 
                        beanData: |
                          '{
                           "ionBean": "SetLocalAction",
                           "Property": "plain:sitesFromGroup",
                           "Value": "source:{\"filter\":\"Sequence\",\"project\":\"poc_energisme\",\"input\":\"\",\"model\":{\"data\":[{\"sequence\":\"poc_energisme.getSitesByGroupName\",\"marker\":\"\"}],\"path\":\"?.sites\",\"prefix\":\"\",\"suffix\":\"\",\"custom\":\"\",\"useCustom\":false}}"
                          }'
                        isEnabled: false
                      ↓pushSitesFromGroups [ngx.components.UICustomAction-1672394173684]: 
                        actionValue: 
                          - xmlizable: 
                            - ↑classname: com.twinsoft.convertigo.beans.common.FormatedContent
                            - com.twinsoft.convertigo.beans.common.FormatedContent: 
                              →: |
                                '		page.c8o.log.debug(''[MB] ''+ props.actionFunction +'': ''+ props.actionName);
                                		console.log("before loop");
                                		console.log(page.local["sitesFromGroup"]);
                                		console.log(vars.sites);
                                		var sites = vars.sites;
                                		for(var i = 0; i < sites.length; i++) {
                                			console.log("in loop")
                                			console.log(sites[i])
                                			page.local["sitesFromGroup"].push(sites[i])	
                                		}
                                		
                                		page.c8o.log.debug("### sitesFromGroups after selected one or multiple group")
                                		console.log(page.local["sitesFromGroup"])
                                		resolve();
                                '
                        ↓sites [ngx.components.UIControlVariable-1672394173687]: 
                          varValue: 
                            - xmlizable: 
                              - ↑classname: com.twinsoft.convertigo.beans.ngx.components.MobileSmartSourceType
                              - MobileSmartSourceType: source:{"filter":"Sequence","project":"poc_energisme","input":"","model":{"data":[{"sequence":"poc_energisme.getSitesByGroupName","marker":""}],"path":"?.sites","prefix":"","suffix":"","custom":"","useCustom":false}}
                    ↓Else_Handler [ngx.components.UIActionElseEvent-1672394173690]: 
                      ↓If [ngx.components.UIDynamicAction-1672394173693]: 
                        beanData: '{"ionBean":"IfAction","condition":"script:this.local[''sitesFromGroup''] != undefined"}'
                        ↓SetLocal [ngx.components.UIDynamicAction-1672394173696]: 
                          beanData: |
                            '{
                             "ionBean": "SetLocalAction",
                             "Property": "plain:sitesFromGroup",
                             "Value": "script:[]"
                            }'
                          isEnabled: false
                        ↓CallSequence [ngx.components.UIDynamicAction-1672394173699]: 
                          beanData: '{"ionBean":"CallSequenceAction","requestable":"plain:poc_energisme.getSitesByGroupName"}'
                          ↓group_name [ngx.components.UIControlVariable-1672394173702]: 
                            comment: new variable
                            varValue: 
                              - xmlizable: 
                                - ↑classname: com.twinsoft.convertigo.beans.ngx.components.MobileSmartSourceType
                                - MobileSmartSourceType: script:event.detail.value
                          ↓SetLocal [ngx.components.UIDynamicAction-1672394173705]: 
                            beanData: |
                              '{
                               "ionBean": "SetLocalAction",
                               "Property": "plain:sitesFromGroup",
                               "Value": "source:{\"filter\":\"Sequence\",\"project\":\"poc_energisme\",\"input\":\"\",\"model\":{\"data\":[{\"sequence\":\"poc_energisme.getSitesByGroupName\",\"marker\":\"\"}],\"path\":\"?.sites\",\"prefix\":\"\",\"suffix\":\"\",\"custom\":\"\",\"useCustom\":false}}"
                              }'
                            isEnabled: false
                          ↓removeSitesFromGroups [ngx.components.UICustomAction-1672394173708]: 
                            actionValue: 
                              - xmlizable: 
                                - ↑classname: com.twinsoft.convertigo.beans.common.FormatedContent
                                - com.twinsoft.convertigo.beans.common.FormatedContent: 
                                  →: |
                                    '		page.c8o.log.debug(''[MB] ''+ props.actionFunction +'': ''+ props.actionName);
                                    		var sites = vars.sites;
                                    		console.log(sites)
                                    		console.log(page.local["sitesFromGroup"])
                                    		
                                    		for(var i = 0; i < sites.length; i++) {
                                    			if(page.local["sitesFromGroup"].includes(sites[i])) {
                                    				page.local["sitesFromGroup"].splice(page.local["sitesFromGroup"].indexOf(sites[i]), 1)
                                    			}
                                    		}
                                    		resolve();
                                    '
                            ↓sites [ngx.components.UIControlVariable-1672394173711]: 
                              varValue: 
                                - xmlizable: 
                                  - ↑classname: com.twinsoft.convertigo.beans.ngx.components.MobileSmartSourceType
                                  - MobileSmartSourceType: source:{"filter":"Sequence","project":"poc_energisme","input":"","model":{"data":[{"sequence":"poc_energisme.getSitesByGroupName","marker":""}],"path":"?.sites","prefix":"","suffix":"","custom":"","useCustom":false}}
          ↓Directive [ngx.components.UIControlDirective-1672061304378]: 
            directiveIndexName: idx
            directiveItemName: group
            directiveSource: 
              - xmlizable: 
                - ↑classname: com.twinsoft.convertigo.beans.ngx.components.MobileSmartSourceType
                - MobileSmartSourceType: source:{"filter":"Sequence","project":"poc_energisme","input":"","model":{"data":[{"sequence":"lib_FullSyncGrp.GroupsOf","marker":""}],"path":"?.group","prefix":"","suffix":"","custom":"","useCustom":false}}
            isEnabled: false
            ↓ListItem [ngx.components.UIDynamicElement-1672061304380]: 
              beanData: '{"ionBean":"ListItem"}'
              isEnabled: false
              tagName: ion-item
              ↓Label [ngx.components.UIDynamicElement-1672061304382]: 
                beanData: '{"ionBean":"Label"}'
                tagName: ion-label
                ↓Text [ngx.components.UIText-1672061304384]: 
                  textValue: 
                    - xmlizable: 
                      - ↑classname: com.twinsoft.convertigo.beans.ngx.components.MobileSmartSourceType
                      - MobileSmartSourceType: script:group
            ↓GridRow [ngx.components.UIDynamicElement-1672151677595]: 
              beanData: '{"ionBean":"GridRow","Height":"plain"}'
              tagName: ion-row
              ↓GridCol [ngx.components.UIDynamicElement-1672151677597]: 
                beanData: '{"ionBean":"GridCol"}'
                tagName: ion-col
                ↓GenericItem [ngx.components.UIDynamicElement-1672062975143]: 
                  beanData: '{"ionBean":"GenericItem","Lines":"plain:none"}'
                  tagName: ion-item
                  ↓CheckBox [ngx.components.UIDynamicElement-1672153653567]: 
                    beanData: |
                      '{
                       "ionBean": "CheckBox",
                       "ControlName": "plain:name1672153653567",
                       "Value": "script:group"
                      }'
                    tagName: ion-checkbox
                    ↓Event [ngx.components.UIControlEvent-1672153983608]: 
                      attrName: (ionChange)
                      eventName: ionChange
                      ↓addSelectedGroup [ngx.components.UICustomAction-1672154030333]: 
                        actionValue: 
                          - xmlizable: 
                            - ↑classname: com.twinsoft.convertigo.beans.common.FormatedContent
                            - com.twinsoft.convertigo.beans.common.FormatedContent: 
                              →: |
                                '		page.c8o.log.debug(''[MB] ''+ props.actionFunction +'': ''+ props.actionName);
                                		var isChecked = event.detail.checked;
                                		var value = event.detail.value;
                                		var bool = false;
                                		console.log("changed")
                                		console.log(event)
                                		
                                		page.c8o.log.debug("### selectedGroups")
                                		console.log(page.local["selectedGroups"])
                                		
                                		if(isChecked) {
                                			page.c8o.log.debug("### Group selected")
                                			page.c8o.log.debug(value)
                                			
                                			// add checked group to local array
                                			if(page.local["selectedGroups"] != undefined) {
                                				page.local[''selectedGroups''].push(value)
                                				page.c8o.log.debug("### Group added in selectedGroups")
                                				page.c8o.log.debug("### selectedGroups")
                                				console.log(page.local["selectedGroups"])
                                				bool = true;
                                			}
                                		} else {
                                			page.c8o.log.debug("### Group unselected")
                                			page.c8o.log.debug(value)
                                			// remove unchecked group from local array
                                			if(page.local["selectedGroups"] != undefined) {
                                				for(var i =0; i < page.local["selectedGroups"].length; i++) {
                                					if(page.local["selectedGroups"][i] == value) {
                                						page.local["selectedGroups"].splice(i, 1)
                                						page.c8o.log.debug("### Groups removed from selectedGroups")
                                						console.log(page.local["selectedGroups"])
                                						bool = false;
                                					}
                                				}
                                			}
                                		}
                                		resolve(bool);
                                '
                        ↓IfElse [ngx.components.UIDynamicIf-1672237843286]: 
                          beanData: '{"ionBean":"IfElseAction"}'
                          ↓CallSequence [ngx.components.UIDynamicAction-1672233068307]: 
                            beanData: '{"ionBean":"CallSequenceAction","requestable":"plain:poc_energisme.getSitesByGroupName"}'
                            ↓group_name [ngx.components.UIControlVariable-1672233082899]: 
                              comment: new variable
                              varValue: 
                                - xmlizable: 
                                  - ↑classname: com.twinsoft.convertigo.beans.ngx.components.MobileSmartSourceType
                                  - MobileSmartSourceType: script:event.detail.value
                            ↓SetLocal [ngx.components.UIDynamicAction-1672233177768]: 
                              beanData: |
                                '{
                                 "ionBean": "SetLocalAction",
                                 "Property": "plain:sitesFromGroup",
                                 "Value": "source:{\"filter\":\"Sequence\",\"project\":\"poc_energisme\",\"input\":\"\",\"model\":{\"data\":[{\"sequence\":\"poc_energisme.getSitesByGroupName\",\"marker\":\"\"}],\"path\":\"?.sites\",\"prefix\":\"\",\"suffix\":\"\",\"custom\":\"\",\"useCustom\":false}}"
                                }'
                              isEnabled: false
                            ↓pushSitesFromGroups [ngx.components.UICustomAction-1672238697429]: 
                              actionValue: 
                                - xmlizable: 
                                  - ↑classname: com.twinsoft.convertigo.beans.common.FormatedContent
                                  - com.twinsoft.convertigo.beans.common.FormatedContent: 
                                    →: |
                                      '		page.c8o.log.debug(''[MB] ''+ props.actionFunction +'': ''+ props.actionName);
                                      		console.log("before loop");
                                      		console.log(page.local["sitesFromGroup"]);
                                      		console.log(vars.sites);
                                      		var sites = vars.sites;
                                      		for(var i = 0; i < sites.length; i++) {
                                      			console.log("in loop")
                                      			console.log(sites[i])
                                      			page.local["sitesFromGroup"].push(sites[i])	
                                      		}
                                      		
                                      		page.c8o.log.debug("### sitesFromGroups after selected one or multiple group")
                                      		console.log(page.local["sitesFromGroup"])
                                      		resolve();
                                      '
                              ↓sites [ngx.components.UIControlVariable-1672238720787]: 
                                varValue: 
                                  - xmlizable: 
                                    - ↑classname: com.twinsoft.convertigo.beans.ngx.components.MobileSmartSourceType
                                    - MobileSmartSourceType: source:{"filter":"Sequence","project":"poc_energisme","input":"","model":{"data":[{"sequence":"poc_energisme.getSitesByGroupName","marker":""}],"path":"?.sites","prefix":"","suffix":"","custom":"","useCustom":false}}
                          ↓Else_Handler [ngx.components.UIActionElseEvent-1672237871757]: 
                            ↓If [ngx.components.UIDynamicAction-1672237880178]: 
                              beanData: '{"ionBean":"IfAction","condition":"script:this.local[''sitesFromGroup''] != undefined"}'
                              ↓SetLocal [ngx.components.UIDynamicAction-1672237914628]: 
                                beanData: |
                                  '{
                                   "ionBean": "SetLocalAction",
                                   "Property": "plain:sitesFromGroup",
                                   "Value": "script:[]"
                                  }'
                                isEnabled: false
                              ↓CallSequence [ngx.components.UIDynamicAction-1672240655879]: 
                                beanData: '{"ionBean":"CallSequenceAction","requestable":"plain:poc_energisme.getSitesByGroupName"}'
                                ↓group_name [ngx.components.UIControlVariable-1672240655882]: 
                                  comment: new variable
                                  varValue: 
                                    - xmlizable: 
                                      - ↑classname: com.twinsoft.convertigo.beans.ngx.components.MobileSmartSourceType
                                      - MobileSmartSourceType: script:event.detail.value
                                ↓SetLocal [ngx.components.UIDynamicAction-1672240655885]: 
                                  beanData: |
                                    '{
                                     "ionBean": "SetLocalAction",
                                     "Property": "plain:sitesFromGroup",
                                     "Value": "source:{\"filter\":\"Sequence\",\"project\":\"poc_energisme\",\"input\":\"\",\"model\":{\"data\":[{\"sequence\":\"poc_energisme.getSitesByGroupName\",\"marker\":\"\"}],\"path\":\"?.sites\",\"prefix\":\"\",\"suffix\":\"\",\"custom\":\"\",\"useCustom\":false}}"
                                    }'
                                  isEnabled: false
                                ↓removeSitesFromGroups [ngx.components.UICustomAction-1672240655888]: 
                                  actionValue: 
                                    - xmlizable: 
                                      - ↑classname: com.twinsoft.convertigo.beans.common.FormatedContent
                                      - com.twinsoft.convertigo.beans.common.FormatedContent: 
                                        →: |
                                          '		page.c8o.log.debug(''[MB] ''+ props.actionFunction +'': ''+ props.actionName);
                                          		var sites = vars.sites;
                                          		console.log(sites)
                                          		console.log(page.local["sitesFromGroup"])
                                          		
                                          		for(var i = 0; i < sites.length; i++) {
                                          			if(page.local["sitesFromGroup"].includes(sites[i])) {
                                          				page.local["sitesFromGroup"].splice(page.local["sitesFromGroup"].indexOf(sites[i]), 1)
                                          			}
                                          		}
                                          		resolve();
                                          '
                                  ↓sites [ngx.components.UIControlVariable-1672240655891]: 
                                    varValue: 
                                      - xmlizable: 
                                        - ↑classname: com.twinsoft.convertigo.beans.ngx.components.MobileSmartSourceType
                                        - MobileSmartSourceType: source:{"filter":"Sequence","project":"poc_energisme","input":"","model":{"data":[{"sequence":"poc_energisme.getSitesByGroupName","marker":""}],"path":"?.sites","prefix":"","suffix":"","custom":"","useCustom":false}}
                  ↓Directive1 [ngx.components.UIControlDirective-1672152612499]: 
                    directiveName: If
                    directiveSource: 
                      - xmlizable: 
                        - ↑classname: com.twinsoft.convertigo.beans.ngx.components.MobileSmartSourceType
                        - MobileSmartSourceType: script:group.includes('ad:')
                    ↓Icon [ngx.components.UIDynamicElement-1672152637454]: 
                      beanData: |
                        '{
                         "ionBean": "Icon",
                         "IconName": "source:{\"filter\":\"Asset\",\"project\":\"poc_energisme\",\"input\":\"\",\"model\":{\"data\":[{\"asset\":\"''assets\\\/icon\\\/Microsoft_Azure.svg''\"}],\"path\":\"\",\"prefix\":\"\",\"suffix\":\"\",\"custom\":\"\",\"useCustom\":false}}",
                         "IconSource": "source:{\"filter\":\"Asset\",\"project\":\"poc_energisme\",\"input\":\"\",\"model\":{\"data\":[{\"asset\":\"''assets\\\/icon\\\/Microsoft_Azure.svg''\"}],\"path\":\"\",\"prefix\":\"\",\"suffix\":\"\",\"custom\":\"\",\"useCustom\":false}}"
                        }'
                      tagName: ion-icon
                      ↓Style [ngx.components.UIStyle-1672246053199]: 
                        styleContent: 
                          - xmlizable: 
                            - ↑classname: com.twinsoft.convertigo.beans.common.FormatedContent
                            - com.twinsoft.convertigo.beans.common.FormatedContent: 
                              →: |
                                '	margin-left: 1.0416666666666667vw !important;
                                	margin-right: 1.0416666666666667vw !important;
                                '
                  ↓Directive2 [ngx.components.UIControlDirective-1672153428441]: 
                    directiveName: If
                    directiveSource: 
                      - xmlizable: 
                        - ↑classname: com.twinsoft.convertigo.beans.ngx.components.MobileSmartSourceType
                        - MobileSmartSourceType: script:!group.includes('ad:')
                    ↓Icon [ngx.components.UIDynamicElement-1672153457974]: 
                      beanData: '{"ionBean":"Icon","IconSource":"source:{\"filter\":\"Asset\",\"project\":\"poc_energisme\",\"input\":\"\",\"model\":{\"data\":[{\"asset\":\"''assets\\\/icon\\\/c8o.png''\"}],\"path\":\"\",\"prefix\":\"\",\"suffix\":\"\",\"custom\":\"\",\"useCustom\":false}}"}'
                      isEnabled: false
                      tagName: ion-icon
                  ↓Text [ngx.components.UIText-1672151677601]: 
                    textValue: 
                      - xmlizable: 
                        - ↑classname: com.twinsoft.convertigo.beans.ngx.components.MobileSmartSourceType
                        - MobileSmartSourceType: 'script:(group.includes(''ad:'')) ? group.slice(3, group.length) : group'
                  ↓Directive [ngx.components.UIControlDirective-1672151992429]: 
                    directiveName: If
                    directiveSource: 
                      - xmlizable: 
                        - ↑classname: com.twinsoft.convertigo.beans.ngx.components.MobileSmartSourceType
                        - MobileSmartSourceType: script:group.includes("ad:") == false
                    ↓ButtonSet1 [ngx.components.UIDynamicElement-1672062975159]: 
                      beanData: '{"ionBean":"ButtonSet","SetPosition":"plain:end"}'
                      tagName: ion-buttons
                      ↓buttonUpdate [ngx.components.UIDynamicElement-1672062975161]: 
                        beanData: '{"ionBean":"Button"}'
                        tagName: ion-button
                        ↓Event [ngx.components.UIControlEvent-1672062975165]: 
                          ↓ModalPage [ngx.components.UIDynamicAction-1672310894483]: 
                            beanData: |
                              '{
                               "ionBean": "ModalAction",
                               "page": "plain:poc_energisme.Application.NgxApp.modalUpdateGroup",
                               "data": "script:{ name: group }",
                               "blockWhileDisplayed": "plain:true"
                              }'
                            ↓If [ngx.components.UIDynamicAction-1672314172372]: 
                              beanData: '{"ionBean":"IfAction","condition":"script:parent.out.data.update == \"true\""}'
                              ↓CallSequence [ngx.components.UIDynamicAction-1672314197105]: 
                                beanData: '{"ionBean":"CallSequenceAction","requestable":"plain:lib_FullSyncGrp.GroupsOf"}'
                                ↓user [ngx.components.UIControlVariable-1672314209152]: 
                                  comment: new variable
                                  varValue: 
                                    - xmlizable: 
                                      - ↑classname: com.twinsoft.convertigo.beans.ngx.components.MobileSmartSourceType
                                      - MobileSmartSourceType: source:{"filter":"Global","project":"poc_energisme","input":"","model":{"data":[{"sharedObject":"router.sharedObject"}],"path":"?.authUser","prefix":"","suffix":"","custom":"","useCustom":false}}
                          ↓Toast [ngx.components.UIDynamicAction-1672311438736]: 
                            beanData: '{"ionBean":"ToastAction","message":"script:group"}'
                            isEnabled: false
                        ↓Icon [ngx.components.UIDynamicElement-1672063006680]: 
                          beanData: '{"ionBean":"Icon","IconName":"source:{\"filter\":\"Icon\",\"project\":\"poc_energisme\",\"input\":\"\",\"model\":{\"data\":[{\"icon\":\"''pencil''\"}],\"path\":\"\",\"prefix\":\"\",\"suffix\":\"\",\"custom\":\"\",\"useCustom\":false}}"}'
                          tagName: ion-icon
                      ↓buttonDelete [ngx.components.UIDynamicElement-1672063036369]: 
                        beanData: '{"ionBean":"Button"}'
                        tagName: ion-button
                        ↓Event [ngx.components.UIControlEvent-1672063036372]: 
                          ↓CallSequence [ngx.components.UIDynamicAction-1672247774182]: 
                            beanData: '{"ionBean":"CallSequenceAction","requestable":"plain:lib_FullSyncGrp.RemoveGroup"}'
                            ↓group [ngx.components.UIControlVariable-1672247784972]: 
                              comment: new variable
                              varValue: 
                                - xmlizable: 
                                  - ↑classname: com.twinsoft.convertigo.beans.ngx.components.MobileSmartSourceType
                                  - MobileSmartSourceType: script:group
                            ↓IfElse [ngx.components.UIDynamicIf-1672247811229]: 
                              beanData: '{"ionBean":"IfElseAction","condition":"script:parent.out.success == \"true\""}'
                              ↓CallSequence1 [ngx.components.UIDynamicAction-1672320516296]: 
                                beanData: '{"ionBean":"CallSequenceAction","requestable":"plain:poc_energisme.removeAllSitesOfGroup"}'
                                ↓CallSequence [ngx.components.UIDynamicAction-1672248398634]: 
                                  beanData: '{"ionBean":"CallSequenceAction","requestable":"plain:lib_FullSyncGrp.GroupsOf"}'
                                  ↓user [ngx.components.UIControlVariable-1672248417596]: 
                                    comment: new variable
                                    varValue: 
                                      - xmlizable: 
                                        - ↑classname: com.twinsoft.convertigo.beans.ngx.components.MobileSmartSourceType
                                        - MobileSmartSourceType: source:{"filter":"Global","project":"poc_energisme","input":"","model":{"data":[{"sharedObject":"router.sharedObject"}],"path":"?.authUser","prefix":"","suffix":"","custom":"","useCustom":false}}
                                  ↓removeSitesFromGroups [ngx.components.UICustomAction-1672320723691]: 
                                    actionValue: 
                                      - xmlizable: 
                                        - ↑classname: com.twinsoft.convertigo.beans.common.FormatedContent
                                        - com.twinsoft.convertigo.beans.common.FormatedContent: 
                                          →: |
                                            '		page.c8o.log.debug(''[MB] ''+ props.actionFunction +'': ''+ props.actionName);
                                            		var sites = vars.sites;
                                            		console.log(sites)
                                            		console.log(page.local["sitesFromGroup"])
                                            		
                                            		for(var i = 0; i < sites.length; i++) {
                                            			if(page.local["sitesFromGroup"].includes(sites[i])) {
                                            				page.local["sitesFromGroup"].splice(page.local["sitesFromGroup"].indexOf(sites[i]), 1)
                                            			}
                                            		}
                                            		resolve();
                                            '
                                    ↓sites [ngx.components.UIControlVariable-1672320723694]: 
                                      varValue: 
                                        - xmlizable: 
                                          - ↑classname: com.twinsoft.convertigo.beans.ngx.components.MobileSmartSourceType
                                          - MobileSmartSourceType: source:{"filter":"Sequence","project":"poc_energisme","input":"","model":{"data":[{"sequence":"poc_energisme.getSitesByGroupName","marker":""}],"path":"?.sites","prefix":"","suffix":"","custom":"","useCustom":false}}
                                ↓group [ngx.components.UIControlVariable-1672320542199]: 
                                  comment: new variable
                                  varValue: 
                                    - xmlizable: 
                                      - ↑classname: com.twinsoft.convertigo.beans.ngx.components.MobileSmartSourceType
                                      - MobileSmartSourceType: script:group
                              ↓Toast [ngx.components.UIDynamicAction-1672247832202]: 
                                beanData: '{"ionBean":"ToastAction","message":"plain:Le groupe a été supprimé."}'
                              ↓Else_Handler [ngx.components.UIActionElseEvent-1672247849861]: 
                                ↓Toast [ngx.components.UIDynamicAction-1672247854918]: 
                                  beanData: '{"ionBean":"ToastAction","message":"plain:Un problème est survenue au moment de la suppression du groupe"}'
                        ↓Icon [ngx.components.UIDynamicElement-1672063036375]: 
                          beanData: '{"ionBean":"Icon","IconName":"plain:trash"}'
                          tagName: ion-icon
                  ↓Style [ngx.components.UIStyle-1672243950031]: 
                    styleContent: 
                      - xmlizable: 
                        - ↑classname: com.twinsoft.convertigo.beans.common.FormatedContent
                        - com.twinsoft.convertigo.beans.common.FormatedContent: 
                          →: |
                            '/**
                             * Custom properties (sometimes referred to as CSS variables or cascading variables)
                             * are entities defined by CSS authors that contain specific values to be reused throughout a document.
                             * They are set using custom property notation, e.g.: --main-color: black;
                             * and are accessed using the var() function, e.g.: color: var(--main-color);
                             * You can find below your component''s properties you can customize within the page.
                             * If you''d like to make some customizations for whole app, please see your app Style & Theme components.
                             * For more informations see https://ionicframework.com/docs/theming.
                            **/
                            //--background	//Background of the item
                            //--background-activated	//Background of the item when pressed. Note: setting this will interfere with the Material Design ripple
                            //--background-activated-opacity	//Opacity of the item background when pressed
                            //--background-focused	//Background of the item when focused with the tab key
                            //--background-focused-opacity	//Opacity of the item background when focused with the tab key
                            //--background-hover	//Background of the item on hover
                            //--background-hover-opacity	//Opacity of the background of the item on hover
                            //--border-color	//Color of the item border
                            //--border-radius	//Radius of the item border
                            //--border-style	//Style of the item border
                            //--border-width	//Width of the item border
                            //--color	//Color of the item
                            //--color-activated	//Color of the item when pressed
                            //--color-focused	//Color of the item when focused with the tab key
                            //--color-hover	//Color of the item on hover
                            //--detail-icon-color	//Color of the item detail icon
                            //--detail-icon-font-size	//Font size of the item detail icon
                            //--detail-icon-opacity	//Opacity of the item detail icon
                            //--highlight-color-focused	//The color of the highlight on the item when focused
                            //--highlight-color-invalid	//The color of the highlight on the item when invalid
                            //--highlight-color-valid	//The color of the highlight on the item when valid
                            //--highlight-height	//The height of the highlight on the item
                            //--inner-border-width	//Width of the item inner border
                            //--inner-box-shadow	//Box shadow of the item inner
                            //--inner-padding-bottom	//Bottom padding of the item inner
                            //--inner-padding-end	//Right padding if direction is left-to-right, and left padding if direction is right-to-left of the item inner
                            //--inner-padding-start	//Left padding if direction is left-to-right, and right padding if direction is right-to-left of the item inner
                            //--inner-padding-top	//Top padding of the item inner
                            //--min-height	//Minimum height of the item
                            //--padding-bottom	//Bottom padding of the item
                            //--padding-end	//Right padding if direction is left-to-right, and left padding if direction is right-to-left of the item
                            //--padding-start	//Left padding if direction is left-to-right, and right padding if direction is right-to-left of the item
                            //--padding-top	//Top padding of the item
                            //--ripple-color	//Color of the item ripple effect
                            //--transition	//Transition of the item
                            font-size: 14px;
                            '
              ↓Style [ngx.components.UIStyle-1672244001534]: 
                styleContent: 
                  - xmlizable: 
                    - ↑classname: com.twinsoft.convertigo.beans.common.FormatedContent
                    - com.twinsoft.convertigo.beans.common.FormatedContent: 
                      →: |
                        	height:50px !important;
                        
        ↓Style [ngx.components.UIStyle-1672245993897]: 
          styleContent: 
            - xmlizable: 
              - ↑classname: com.twinsoft.convertigo.beans.common.FormatedContent
              - com.twinsoft.convertigo.beans.common.FormatedContent: 
                →: |
                  '/**
                   * Custom properties (sometimes referred to as CSS variables or cascading variables)
                   * are entities defined by CSS authors that contain specific values to be reused throughout a document.
                   * They are set using custom property notation, e.g.: --main-color: black;
                   * and are accessed using the var() function, e.g.: color: var(--main-color);
                   * You can find below your component''s properties you can customize within the page.
                   * If you''d like to make some customizations for whole app, please see your app Style & Theme components.
                   * For more informations see https://ionicframework.com/docs/theming.
                  **/
                  //--ion-grid-column-padding	//Padding for the Column
                  //--ion-grid-column-padding-lg	//Padding for the Column on lg screens and up
                  //--ion-grid-column-padding-md	//Padding for the Column on md screens and up
                  //--ion-grid-column-padding-sm	//Padding for the Column on sm screens and up
                  //--ion-grid-column-padding-xl	//Padding for the Column on xl screens and up
                  //--ion-grid-column-padding-xs	//Padding for the Column on xs screens and up
                  //--ion-grid-columns	//The number of total Columns in the Grid
                  border-left: 1px solid #f2f2f2;
                  '
      ↓colSites [ngx.components.UIDynamicElement-1672061108465]: 
        beanData: '{"ionBean":"GridCol","Size":"plain:4"}'
        tagName: ion-col
        ↓ListContainer [ngx.components.UIDynamicElement-1672061906093]: 
          beanData: '{"ionBean":"List"}'
          isEnabled: false
          tagName: ion-list
          ↓ListHeader [ngx.components.UIDynamicElement-1672061906096]: 
            beanData: '{"ionBean":"Listheader"}'
            isEnabled: false
            tagName: ion-list-header
            ↓Label [ngx.components.UIDynamicElement-1672061906099]: 
              beanData: '{"ionBean":"Label"}'
              tagName: ion-label
              ↓Heading [ngx.components.UIDynamicTag-1672061906102]: 
                beanData: '{"ionBean":"Heading"}'
                tagName: h1
                ↓Text [ngx.components.UIText-1672061906105]: 
                  textValue: 
                    - xmlizable: 
                      - ↑classname: com.twinsoft.convertigo.beans.ngx.components.MobileSmartSourceType
                      - MobileSmartSourceType: plain:Liste des sites
        ↓Grid [ngx.components.UIDynamicElement-1672221082962]: 
          beanData: '{"ionBean":"Grid"}'
          tagName: ion-grid
          ↓ListHeader [ngx.components.UIDynamicElement-1672245782311]: 
            beanData: '{"ionBean":"Listheader"}'
            tagName: ion-list-header
            ↓Label [ngx.components.UIDynamicElement-1672245782314]: 
              beanData: '{"ionBean":"Label"}'
              tagName: ion-label
              ↓Heading [ngx.components.UIDynamicTag-1672245782317]: 
                beanData: '{"ionBean":"Heading"}'
                tagName: h1
                ↓Text [ngx.components.UIText-1672245682552]: 
                  textValue: 
                    - xmlizable: 
                      - ↑classname: com.twinsoft.convertigo.beans.ngx.components.MobileSmartSourceType
                      - MobileSmartSourceType: plain:Sites
          ↓Directive [ngx.components.UIControlDirective-1672061906108]: 
            directiveIndexName: idx
            directiveItemName: site
            directiveSource: 
              - xmlizable: 
                - ↑classname: com.twinsoft.convertigo.beans.ngx.components.MobileSmartSourceType
                - MobileSmartSourceType: source:{"filter":"Sequence","project":"poc_energisme","input":"","model":{"data":[{"sequence":"poc_energisme.getSitesList","marker":""}],"path":"?.sites","prefix":"","suffix":"","custom":"","useCustom":false}}
            ↓GridRow [ngx.components.UIDynamicElement-1672221082964]: 
              beanData: '{"ionBean":"GridRow","Height":"plain"}'
              tagName: ion-row
              ↓GridCol [ngx.components.UIDynamicElement-1672221082966]: 
                beanData: '{"ionBean":"GridCol"}'
                tagName: ion-col
                ↓GenericItem [ngx.components.UIDynamicElement-1672221137892]: 
                  beanData: '{"ionBean":"GenericItem","Lines":"plain:none"}'
                  tagName: ion-item
                  ↓CheckBox [ngx.components.UIDynamicElement-1672221146899]: 
                    beanData: |
                      '{
                       "ionBean": "CheckBox",
                       "ControlName": "plain:name1672153653567",
                       "Value": "script:site.id"
                      }'
                    isEnabled: false
                    tagName: ion-checkbox
                    ↓Event [ngx.components.UIControlEvent-1672221146902]: 
                      attrName: (ionChange)
                      eventName: ionChange
                  ↓Text [ngx.components.UIText-1672221082970]: 
                    textValue: 
                      - xmlizable: 
                        - ↑classname: com.twinsoft.convertigo.beans.ngx.components.MobileSmartSourceType
                        - MobileSmartSourceType: script:site.nom
                  ↓Attr [ngx.components.UIAttribute-1672236817190]: 
                    attrName: style
                    attrValue: 
                      - xmlizable: 
                        - ↑classname: com.twinsoft.convertigo.beans.ngx.components.MobileSmartSourceType
                        - MobileSmartSourceType: 'script:(this.local[''sitesFromGroup''] != undefined  && this.local[''sitesFromGroup''].includes(''''+site.id)) ? ''--background: #07a96e'' : '''''
                  ↓Style [ngx.components.UIStyle-1672244134308]: 
                    styleContent: 
                      - xmlizable: 
                        - ↑classname: com.twinsoft.convertigo.beans.common.FormatedContent
                        - com.twinsoft.convertigo.beans.common.FormatedContent: 
                          →: |
                            '/**
                             * Custom properties (sometimes referred to as CSS variables or cascading variables)
                             * are entities defined by CSS authors that contain specific values to be reused throughout a document.
                             * They are set using custom property notation, e.g.: --main-color: black;
                             * and are accessed using the var() function, e.g.: color: var(--main-color);
                             * You can find below your component''s properties you can customize within the page.
                             * If you''d like to make some customizations for whole app, please see your app Style & Theme components.
                             * For more informations see https://ionicframework.com/docs/theming.
                            **/
                            //--background	//Background of the item
                            //--background-activated	//Background of the item when pressed. Note: setting this will interfere with the Material Design ripple
                            //--background-activated-opacity	//Opacity of the item background when pressed
                            //--background-focused	//Background of the item when focused with the tab key
                            //--background-focused-opacity	//Opacity of the item background when focused with the tab key
                            //--background-hover	//Background of the item on hover
                            //--background-hover-opacity	//Opacity of the background of the item on hover
                            //--border-color	//Color of the item border
                            //--border-radius	//Radius of the item border
                            //--border-style	//Style of the item border
                            //--border-width	//Width of the item border
                            //--color	//Color of the item
                            //--color-activated	//Color of the item when pressed
                            //--color-focused	//Color of the item when focused with the tab key
                            //--color-hover	//Color of the item on hover
                            //--detail-icon-color	//Color of the item detail icon
                            //--detail-icon-font-size	//Font size of the item detail icon
                            //--detail-icon-opacity	//Opacity of the item detail icon
                            //--highlight-color-focused	//The color of the highlight on the item when focused
                            //--highlight-color-invalid	//The color of the highlight on the item when invalid
                            //--highlight-color-valid	//The color of the highlight on the item when valid
                            //--highlight-height	//The height of the highlight on the item
                            //--inner-border-width	//Width of the item inner border
                            //--inner-box-shadow	//Box shadow of the item inner
                            //--inner-padding-bottom	//Bottom padding of the item inner
                            //--inner-padding-end	//Right padding if direction is left-to-right, and left padding if direction is right-to-left of the item inner
                            //--inner-padding-start	//Left padding if direction is left-to-right, and right padding if direction is right-to-left of the item inner
                            //--inner-padding-top	//Top padding of the item inner
                            //--min-height	//Minimum height of the item
                            //--padding-bottom	//Bottom padding of the item
                            //--padding-end	//Right padding if direction is left-to-right, and left padding if direction is right-to-left of the item
                            //--padding-start	//Left padding if direction is left-to-right, and right padding if direction is right-to-left of the item
                            //--padding-top	//Top padding of the item
                            //--ripple-color	//Color of the item ripple effect
                            //--transition	//Transition of the item
                            font-size: 14px;
                            '
                  ↓ButtonSet [ngx.components.UIDynamicElement-1672244206539]: 
                    beanData: '{"ionBean":"ButtonSet","SetPosition":"plain:end"}'
                    tagName: ion-buttons
                    ↓Icon [ngx.components.UIDynamicElement-1672222434249]: 
                      beanData: |
                        '{
                         "ionBean": "Icon",
                         "IconName": "script:(this.local[''sitesFromGroup''] != undefined  && this.local[''sitesFromGroup''].includes(''''+site.id)) ? ''close-circle-outline'' : ''add-circle-outline''",
                         "IonSize": "plain:large"
                        }'
                      tagName: ion-icon
                      ↓Event [ngx.components.UIControlEvent-1672222448610]: 
                        ↓IfElse [ngx.components.UIDynamicIf-1672395550226]: 
                          beanData: '{"ionBean":"IfElseAction","condition":"script:this.local[''sitesFromGroup''].includes(''''+stack.root.scope.site.id)"}'
                          comment: case where sites is selected in group so we want to remove
                          ↓CallSequence [ngx.components.UIDynamicAction-1672396009889]: 
                            beanData: '{"ionBean":"CallSequenceAction","requestable":"plain:poc_energisme.removeSiteFromGroup"}'
                            ↓group [ngx.components.UIControlVariable-1672396023549]: 
                              comment: new variable
                              varValue: 
                                - xmlizable: 
                                  - ↑classname: com.twinsoft.convertigo.beans.ngx.components.MobileSmartSourceType
                                  - MobileSmartSourceType: script:this.local['selectedGroups'][0]
                            ↓site_id [ngx.components.UIControlVariable-1672396023551]: 
                              comment: new variable
                              varValue: 
                                - xmlizable: 
                                  - ↑classname: com.twinsoft.convertigo.beans.ngx.components.MobileSmartSourceType
                                  - MobileSmartSourceType: script:site.id
                            ↓IfElse [ngx.components.UIDynamicIf-1672396181510]: 
                              beanData: '{"ionBean":"IfElseAction","condition":"source:{\"filter\":\"Sequence\",\"project\":\"poc_energisme\",\"input\":\"\",\"model\":{\"data\":[{\"sequence\":\"poc_energisme.removeSiteFromGroup\",\"marker\":\"\"}],\"path\":\"?.success\",\"prefix\":\"\",\"suffix\":\"\",\"custom\":\"\",\"useCustom\":false}}"}'
                              ↓Toast [ngx.components.UIDynamicAction-1672396768356]: 
                                beanData: |
                                  '{
                                   "ionBean": "ToastAction",
                                   "message": "plain:Le site a correctement été retiré du groupe.",
                                   "position": "plain:top"
                                  }'
                              ↓removeSitesFromGroups [ngx.components.UICustomAction-1672396229118]: 
                                actionValue: 
                                  - xmlizable: 
                                    - ↑classname: com.twinsoft.convertigo.beans.common.FormatedContent
                                    - com.twinsoft.convertigo.beans.common.FormatedContent: 
                                      →: |
                                        '		page.c8o.log.debug(''[MB] ''+ props.actionFunction +'': ''+ props.actionName);
                                        		var sites = vars.sites;
                                        		console.log(sites)
                                        		console.log(page.local["sitesFromGroup"])
                                        		
                                        		for(var i = 0; i < sites.length; i++) {
                                        			if(page.local["sitesFromGroup"].includes(sites[i])) {
                                        				page.local["sitesFromGroup"].splice(page.local["sitesFromGroup"].indexOf(sites[i]), 1)
                                        			}
                                        		}
                                        		resolve();
                                        '
                                ↓sites [ngx.components.UIControlVariable-1672396229121]: 
                                  varValue: 
                                    - xmlizable: 
                                      - ↑classname: com.twinsoft.convertigo.beans.ngx.components.MobileSmartSourceType
                                      - MobileSmartSourceType: source:{"filter":"Sequence","project":"poc_energisme","input":"","model":{"data":[{"sequence":"poc_energisme.getSitesByGroupName","marker":""}],"path":"?.sites","prefix":"","suffix":"","custom":"","useCustom":false}}
                              ↓Else_Handler [ngx.components.UIActionElseEvent-1672396192131]: 
                                ↓Toast [ngx.components.UIDynamicAction-1672396255222]: 
                                  beanData: |
                                    '{
                                     "ionBean": "ToastAction",
                                     "message": "plain:Une erreur s''est produite durant la suppression du site au sein du groupe.",
                                     "position": "plain:top"
                                    }'
                          ↓Else_Handler [ngx.components.UIActionElseEvent-1672396280891]: 
                            ↓checkIfSelectedGroup [ngx.components.UICustomAction-1672221146905]: 
                              actionValue: 
                                - xmlizable: 
                                  - ↑classname: com.twinsoft.convertigo.beans.common.FormatedContent
                                  - com.twinsoft.convertigo.beans.common.FormatedContent: 
                                    →: |
                                      '		page.c8o.log.debug(''[MB] ''+ props.actionFunction +'': ''+ props.actionName);
                                      		var isSelected = false;
                                      		if(page.local["selectedGroups"] != undefined && page.local["selectedGroups"].length > 0) {
                                      			isSelected = true;
                                      		}
                                      		resolve(isSelected);
                                      '
                              ↓IfElse [ngx.components.UIDynamicIf-1672223355451]: 
                                beanData: '{"ionBean":"IfElseAction"}'
                                ↓CallSequence [ngx.components.UIDynamicAction-1672224849928]: 
                                  beanData: '{"ionBean":"CallSequenceAction","requestable":"plain:poc_energisme.insertGroupSites"}'
                                  ↓groups [ngx.components.UIControlVariable-1672224876098]: 
                                    comment: new variable
                                    varValue: 
                                      - xmlizable: 
                                        - ↑classname: com.twinsoft.convertigo.beans.ngx.components.MobileSmartSourceType
                                        - MobileSmartSourceType: source:{"filter":"Local","project":"poc_energisme","input":"","model":{"data":[{"localObject":"local"}],"path":"?.selectedGroups","prefix":"","suffix":"","custom":"","useCustom":false}}
                                  ↓site_id [ngx.components.UIControlVariable-1672224876100]: 
                                    comment: new variable
                                    varValue: 
                                      - xmlizable: 
                                        - ↑classname: com.twinsoft.convertigo.beans.ngx.components.MobileSmartSourceType
                                        - MobileSmartSourceType: script:stack.root.scope.site.id
                                  ↓IfElse [ngx.components.UIDynamicIf-1672225152026]: 
                                    beanData: '{"ionBean":"IfElseAction","condition":"script:parent.out.status"}'
                                    ↓Toast [ngx.components.UIDynamicAction-1672224994300]: 
                                      beanData: |
                                        '{
                                         "ionBean": "ToastAction",
                                         "message": "script:''Le site a été correctement ajouté'' + ((this.local.selectedGroups.length > 1) ? ''aux groupes'' : ''au groupe''",
                                         "position": "plain:top"
                                        }'
                                    ↓pushSiteIntoLocalGroup [ngx.components.UICustomAction-1672238220770]: 
                                      actionValue: 
                                        - xmlizable: 
                                          - ↑classname: com.twinsoft.convertigo.beans.common.FormatedContent
                                          - com.twinsoft.convertigo.beans.common.FormatedContent: 
                                            →: |
                                              '		page.c8o.log.debug(''[MB] ''+ props.actionFunction +'': ''+ props.actionName);
                                              		console.log(vars.site_id)
                                              		page.local["sitesFromGroup"].push(""+vars.site_id)
                                              		resolve();
                                              '
                                      ↓site_id [ngx.components.UIControlVariable-1672238256761]: 
                                        comment: new variable
                                        varValue: 
                                          - xmlizable: 
                                            - ↑classname: com.twinsoft.convertigo.beans.ngx.components.MobileSmartSourceType
                                            - MobileSmartSourceType: script:stack.root.scope.site.id
                                    ↓Else_Handler [ngx.components.UIActionElseEvent-1672225185977]: 
                                      ↓Toast [ngx.components.UIDynamicAction-1672225191737]: 
                                        beanData: |
                                          '{
                                           "ionBean": "ToastAction",
                                           "message": "plain:Une erreur s''est produite lors de l''affliation du site au groupe.",
                                           "position": "plain:top"
                                          }'
                                ↓Else_Handler [ngx.components.UIActionElseEvent-1672223364318]: 
                                  ↓Toast [ngx.components.UIDynamicAction-1672223374022]: 
                                    beanData: |
                                      '{
                                       "ionBean": "ToastAction",
                                       "message": "plain:Veuillez sélectionner au moins un groupe",
                                       "position": "plain:top"
                                      }'
                    ↓Style [ngx.components.UIStyle-1672244275951]: 
                      styleContent: 
                        - xmlizable: 
                          - ↑classname: com.twinsoft.convertigo.beans.common.FormatedContent
                          - com.twinsoft.convertigo.beans.common.FormatedContent: 
                            →: |
                              '	ion-icon:hover {
                              		cursor: pointer;
                              	}
                              '
              ↓Style [ngx.components.UIStyle-1672244129904]: 
                styleContent: 
                  - xmlizable: 
                    - ↑classname: com.twinsoft.convertigo.beans.common.FormatedContent
                    - com.twinsoft.convertigo.beans.common.FormatedContent: 
                      →: |
                        	height:50px !important;
                        
    ↓Style [ngx.components.UIStyle-1672244974778]: 
      isEnabled: false
      styleContent: 
        - xmlizable: 
          - ↑classname: com.twinsoft.convertigo.beans.common.FormatedContent
          - com.twinsoft.convertigo.beans.common.FormatedContent: 
            →: |
              '/**
               * Custom properties (sometimes referred to as CSS variables or cascading variables)
               * are entities defined by CSS authors that contain specific values to be reused throughout a document.
               * They are set using custom property notation, e.g.: --main-color: black;
               * and are accessed using the var() function, e.g.: color: var(--main-color);
               * You can find below your component''s properties you can customize within the page.
               * If you''d like to make some customizations for whole app, please see your app Style & Theme components.
               * For more informations see https://ionicframework.com/docs/theming.
              **/
              //--ion-grid-padding	//Padding for the Grid
              //--ion-grid-padding-lg	//Padding for the Grid on lg screens
              //--ion-grid-padding-md	//Padding for the Grid on md screens
              //--ion-grid-padding-sm	//Padding for the Grid on sm screens
              //--ion-grid-padding-xl	//Padding for the Grid on xl screens
              //--ion-grid-padding-xs	//Padding for the Grid on xs screens
              //--ion-grid-width	//Width of the fixed Grid
              //--ion-grid-width-lg	//Width of the fixed Grid on lg screens
              //--ion-grid-width-md	//Width of the fixed Grid on md screens
              //--ion-grid-width-sm	//Width of the fixed Grid on sm screens
              //--ion-grid-width-xl	//Width of the fixed Grid on xl screens
              //--ion-grid-width-xs	//Width of the fixed Grid on xs screens
              background-color: white;
              '
↓PageEvent [ngx.components.UIPageEvent-1672060069180]: 
  ↓CallSequence [ngx.components.UIDynamicAction-1672060346412]: 
    beanData: '{"ionBean":"CallSequenceAction","requestable":"plain:poc_energisme.getGroupsOf"}'
    ↓user [ngx.components.UIControlVariable-1672060355712]: 
      comment: new variable
      varValue: 
        - xmlizable: 
          - ↑classname: com.twinsoft.convertigo.beans.ngx.components.MobileSmartSourceType
          - MobileSmartSourceType: source:{"filter":"Global","project":"poc_energisme","input":"","model":{"data":[{"sharedObject":"router.sharedObject"}],"path":"?.authUser","prefix":"","suffix":"","custom":"","useCustom":false}}
  ↓CallSequence1 [ngx.components.UIDynamicAction-1672061856428]: 
    beanData: '{"ionBean":"CallSequenceAction","requestable":"plain:poc_energisme.getSitesList"}'
    ↓SetGlobal [ngx.components.UIDynamicAction-1672237737761]: 
      beanData: |
        '{
         "ionBean": "SetGlobalAction",
         "Property": "plain:sitesList",
         "Value": "script:parent.out"
        }'
  ↓SetLocal [ngx.components.UIDynamicAction-1672222180761]: 
    beanData: |
      '{
       "ionBean": "SetLocalAction",
       "Property": "plain:selectedGroups",
       "Value": "script:[]"
      }'
  ↓SetLocal1 [ngx.components.UIDynamicAction-1672238670508]: 
    beanData: |
      '{
       "ionBean": "SetLocalAction",
       "Property": "plain:sitesFromGroup",
       "Value": "script:[]"
      }'